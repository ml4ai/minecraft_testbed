buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        
    }
}

plugins{
id "com.github.johnrengelman.shadow" version "1.2.3"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'java'

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

// Add "embedded" configuration
configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    // This dependency and its transitive deps will be embedded
    
    // JARS
    embed files("./libs/org.eclipse.paho.client.mqttv3-1.2.0.jar","./libs/gson-2.8.2.jar")
    embed files("./libs/opencsv-5.1.jar","./libs/opencsv-5.1.jar")
    embed files("./libs/commons-collections4-4.1.jar","./libs/commons-collections4-4.1.jar")
    embed files("./libs/commons-lang3-3.10.jar","./libs/commons-lang3-3.10.jar")
    embed files("./libs/commons-beanutils-1.9.3.jar","./libs/commons-beanutils-1.9.3.jar")
    embed files("./libs/commons-logging-1.2.jar","./libs/commons-logging-1.2.jar")

    // PULL FROM MAVEN
    //embed group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    
    
    // You can also depend on some jar and not embed it
    //compile 'some.mod:api:1.0'
}

// Add dependencies to the JAR
jar {
    from configurations.embed.collect { 
        exclude '**/META-INF/LICENSE.txt' 
        exclude '**/META-INF/NOTICE.txt' 
        it.isDirectory() ? it : zipTree(it) 
    }
}

version = "2.0.9"
group = "com.bulbousonions13.asistmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "asistmod"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.11.2-13.20.1.2588"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161220"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    
    //runtimeOnly files("./libs/org.eclipse.paho.client.mqttv3-1.2.0.jar", "./libs/gson-2.8.6.jar")
    //runtimeOnly fileTree('libs') { include '*.jar' }
    
     runtimeOnly(
        [group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.0'],
        [group: 'com.google.code.gson', name: 'gson', version: '2.8.6']
    )
    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided files("./libs/org.eclipse.paho.client.mqttv3-1.2.0.jar", "./libs/gson-2.8.6.jar")
    

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

shadowJar {
    classifier = ""
    relocate "org.apache.commons.collections4", "com.apmods.commons.collections4.repack.org.apache.commons.collections4"
    relocate "org.apache.commons.lang3", "com.apmods.commons.lang3.repack.org.apache.commons.lang3"
    relocate "org.apache.commons.beanutils", "com.apmods.commons.beanutils.repack.org.apache.commons.beanutils"
    relocate "org.apache.commons.logging", "com.apmods.commons.logging.repack.org.apache.commons.logging"
}

reobf { shadowJar { mappingType = "SEARGE" } }
tasks.reobfShadowJar.mustRunAfter shadowJar

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
