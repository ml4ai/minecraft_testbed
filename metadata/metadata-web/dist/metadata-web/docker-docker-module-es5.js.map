{"version":3,"sources":["webpack:///src/app/docker/docker-routing.module.ts","webpack:///src/app/docker/docker.module.ts","webpack:///src/app/docker/docker/docker.component.ts","webpack:///src/app/docker/docker/docker.component.html"],"names":["routes","path","component","DockerRoutingModule","forChild","imports","exports","DockerModule","declarations","DockerComponent","dockerService","mqttService","containers","statistics","selectedContainer","selectedContainerLog","agents","agentLog","metadataAgentLogSubscription","observe","subscribe","message","output","TextDecoder","decode","payload","console","log","containerStatusTimer","agentList","dockerOnlineSubscription","isDockerOnline","isOnline","dockerOnline","unsubscribe","source","val","ping","containerList","online","currentContainerIds","Object","keys","forEach","id","findIndex","c","Id","container","containerStats","containerLog","$event","option","value","c1","c2","startContainer","stopContainer","containerLogDownload","response","dataType","type","binaryData","push","downloadLink","document","createElement","href","window","URL","createObjectURL","Blob","setAttribute","body","appendChild","click","containerLogsDownload","stats","cpu_delta","cpu_stats","cpu_usage","total_usage","precpu_stats","system_cpu_delta","system_cpu_usage","number_cpus","online_cpus","percpu_usage","length","toFixed","used_memory","memory_stats","usage","cache","available_memory","limit","agent","agentUp","agentDown","onSelectionChange","selector","templateUrl","styleUrls"],"mappings":"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","file":"docker-docker-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DockerComponent } from './docker/docker.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DockerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DockerRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DockerComponent } from './docker/docker.component';\nimport { DockerRoutingModule } from './docker-routing.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ExtendedModule, FlexModule } from '@angular/flex-layout';\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\nimport {FormsModule} from \"@angular/forms\";\n\n\n\n@NgModule({\n  declarations: [DockerComponent],\n  imports: [\n    CommonModule,\n    DockerRoutingModule,\n    AngularMaterialModule,\n    DashboardModule,\n    ExtendedModule,\n    FlexModule,\n    FormsModule,\n  ]\n})\nexport class DockerModule { }\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { map, startWith } from 'rxjs/operators';\nimport { DockerService } from '../docker.service';\nimport {Subscription, timer} from 'rxjs';\nimport { MatListOption, MatSelectionList, MatSelectionListChange } from '@angular/material/list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AgentService } from '../agent.service';\nimport { IMqttMessage, MqttService } from 'ngx-mqtt';\n\n@Component({\n  selector: 'app-docker',\n  templateUrl: './docker.component.html',\n  styleUrls: ['./docker.component.scss']\n})\nexport class DockerComponent implements OnInit, OnDestroy {\n  private dockerOnlineSubscription: Subscription;\n\n  @ViewChild('containerList') matSelectionList: MatSelectionList;\n\n  containers: any = {};\n  statistics: any = {};\n  selectedContainer: any = null;\n  dockerOnline: boolean;\n  selectedContainerLog: string[] = [];\n  agents: string[] = [];\n  agentLog = ''; // 'b1124ca78a7a Extracting [==================================================>]  40.41MB/40.41MB';\n\n  private metadataAgentLogSubscription: Subscription;\n\n  constructor(\n    private dockerService: DockerService,\n    // private agentService: AgentService,\n    private mqttService: MqttService) {\n    this.metadataAgentLogSubscription = this.mqttService.observe('metadata/agent/log').subscribe((message: IMqttMessage) => {\n      const output = new TextDecoder('utf-8').decode(message.payload);\n      // const logMessage = JSON.parse(output);\n      // const decodedString = atob(logMessage.encoded_string);\n      console.log(output);\n      this.agentLog = output;\n    });\n  }\n\n  ngOnInit(): void {\n    this.containerStatusTimer();\n    this.agentList();\n    this.dockerOnlineSubscription = this.dockerService.isDockerOnline.subscribe(isOnline => this.dockerOnline = isOnline);\n  }\n\n  ngOnDestroy(): void {\n    this.dockerOnlineSubscription.unsubscribe();\n    this.metadataAgentLogSubscription.unsubscribe();\n  }\n\n  containerStatusTimer(): void {\n    const source = timer(0, 10000);\n    source.subscribe(val => {\n      this.ping();\n      this.containerList();\n    });\n  }\n\n  ping(): void {\n    this.dockerService.ping().subscribe(online => {\n      this.dockerOnline = online;\n    });\n  }\n\n  containerList(): void {\n    this.dockerService.containerList().subscribe(containers => {\n      // Remove any old containers that are not in new list\n      const currentContainerIds = Object.keys(this.containers);\n      currentContainerIds.forEach(id => {\n        if (containers.findIndex(c => {\n          return c.Id === id;\n        }) === -1) {\n          delete this.containers[id];\n          delete this.statistics[id];\n        }\n      });\n      // Update container list\n      containers.forEach(container => {\n        this.containers[container.Id] = container;\n        if (this.selectedContainer && this.selectedContainer.Id === container.Id) {\n          this.selectedContainer = container;\n        }\n        // Stats\n        this.containerStats(container.Id);\n      });\n    });\n  }\n\n  agentList(): void {\n    this.dockerService.agentList().subscribe(agents => {\n      console.log('agents: ' + agents);\n      this.agents = agents;\n    });\n  }\n\n  containerLog(Id: string) {\n    this.dockerService.containerLog(Id).subscribe(log => {\n      this.selectedContainerLog = log;\n    });\n  }\n\n  onSelectionChange($event) {\n    this.selectedContainer = $event.option?.value;\n    this.containerLog(this.selectedContainer.Id);\n  }\n\n  isSelected(Id: string) {\n    if (this.selectedContainer) {\n      return (this.selectedContainer.Id === Id);\n    }\n  }\n\n  compare(c1: {Id: string}, c2: {Id: string}) {\n    return c1 && c2 && c1.Id === c2.Id;\n  }\n\n  startContainer(id: string) {\n    this.agentLog = '';\n    this.dockerService.startContainer(id).subscribe(container => {\n      this.selectedContainer = container;\n      this.containers[id] = container;\n    });\n  }\n\n  stopContainer(id: string) {\n    this.agentLog = '';\n    this.dockerService.stopContainer(id).subscribe(container => {\n      this.selectedContainer = container;\n      this.containers[id] = container;\n    });\n  }\n\n  containerLogDownload(Id: string) {\n    this.dockerService.containerLogDownload(Id).subscribe(response => {\n      const dataType = response.type;\n      const binaryData = [];\n      binaryData.push(response);\n      const downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n      downloadLink.setAttribute('download', `${Id}.txt`);\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n    });\n  }\n\n  containerLogsDownload() {\n    this.dockerService.containerLogsDownload().subscribe(response => {\n      const dataType = response.type;\n      const binaryData = [];\n      binaryData.push(response);\n      const downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n      downloadLink.setAttribute('download', 'dockerlogs.zip');\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n    });\n  }\n\n  containerStats(Id: string) {\n    this.dockerService.containerStats(Id).subscribe(stats => {\n      this.statistics[Id] = stats[0];\n    });\n  }\n\n  calcCpuPercent(Id: string) {\n    // cpu_delta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage\n    // system_cpu_delta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage\n    // number_cpus = length(cpu_stats.cpu_usage.percpu_usage) or cpu_stats.online_cpus\n    // (cpu_delta / system_cpu_delta) * number_cpus * 100.0\n    const stats = this.statistics[Id];\n    if (stats) {\n      const cpu_delta = stats.cpu_stats.cpu_usage.total_usage - stats.precpu_stats.cpu_usage.total_usage;\n      const system_cpu_delta = (stats.cpu_stats.system_cpu_usage ? stats.cpu_stats.system_cpu_usage : 0) - (stats.precpu_stats.system_cpu_usage ? stats.precpu_stats.system_cpu_usage : 0);\n      const number_cpus = stats.cpu_stats.online_cpus ? stats.cpu_stats.online_cpus : (stats.cpu_stats.cpu_usage.percpu_usage ? stats.cpu_stats.cpu_usage.percpu_usage.length : 1);\n      return ((cpu_delta / system_cpu_delta) * (number_cpus * 100.0)).toFixed(2);\n    }\n  }\n\n  calcMemPercent(Id: string) {\n    // used_memory = memory_stats.usage - memory_stats.stats.cache\n    // available_memory = memory_stats.limit\n    // (used_memory / available_memory) * 100.0\n    const stats = this.statistics[Id];\n    if (stats) {\n      const used_memory = stats.memory_stats.usage ? stats.memory_stats.usage : 0 - stats.memory_stats.stats ? (stats.memory_stats.stats.cache ? stats.memory_stats.stats.cache : 0) : 0;\n      const available_memory = stats.memory_stats.limit;\n      return ((used_memory / available_memory) * 100.0).toFixed(2);\n    }\n  }\n\n  agentUp(agent: string) {\n    this.agentLog = `Calling up on agent: ${agent}`;\n    this.dockerService.agentUp(agent).subscribe(output => {\n      // console.log(output);\n    });\n  }\n\n  agentDown(agent: string) {\n    this.agentLog = `Calling down on agent: ${agent}`;\n    this.dockerService.agentDown(agent).subscribe(output => {\n      // console.log(output);\n    });\n  }\n\n  // agentUp(agent: string) {\n  //   this.agentService.agentUp(agent).subscribe(output => {\n  //       console.log(output);\n  //       this.agentLog = output;\n  //     });\n  //   // this.dockerService.agentUp(agent).subscribe(output => {\n  //   //   console.log(output);\n  //   //   this.agentLog = output;\n  //   // });\n  // }\n}\n","<div class=\"container\">\n  <h2>Docker</h2>\n  <div fxLayout=\"row wrap\" [fxLayout.lt-md]=\"'column wrap'\" fxLayoutAlign=\"center top\"> <!--fxLayoutGap=\"2em\"-->\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Containers\">web_stories</mat-icon>\n          </div>\n          <mat-card-title>Containers</mat-card-title>\n          <mat-card-subtitle>Status</mat-card-subtitle>\n          <mat-icon color=\"{{dockerOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{dockerOnline ? 'Docker online' : 'Docker offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-selection-list #containerList [multiple]=\"false\" (selectionChange)=\"onSelectionChange($event)\" [compareWith]=\"compare\">\n            <mat-list-option *ngFor=\"let item of containers | keyvalue\" [value]=\"item.value\" [selected]=\"isSelected(item.value.Id)\">\n              <mat-icon mat-list-icon color=\"{{item.value.State ==='running'  ? 'primary' : 'warn'}}\" matTooltip=\"{{item.value.Status}}\">lens</mat-icon>\n              <div mat-line>{{item.value.Names[0].substring(1)}}</div>\n              <div mat-line>CPU: {{item.value.State === 'running' ? calcCpuPercent(item.value.Id) + '%' : '0'}} MEM: {{item.value.State === 'running' ? calcMemPercent(item.value.Id) + '%' : '0'}}</div>\n            </mat-list-option>\n          </mat-selection-list>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogsDownload()\" [disabled]=\"!dockerOnline\" matTooltip=\"Download all container logs\">\n            <mat-icon>download</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Container Details\">notes</mat-icon>\n          </div>\n          <mat-card-title>Container</mat-card-title>\n          <mat-card-subtitle>{{selectedContainer === null ? 'Details' : selectedContainer.Names[0].substring(1)}}</mat-card-subtitle>\n          <mat-icon color=\"{{selectedContainer === null || selectedContainer.State === 'running' ? 'primary' : 'warn'}}\" matTooltip=\"{{selectedContainer === null ? '' : selectedContainer.Status}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <p *ngIf=\"selectedContainer !== null\" class=\"lighter\"><span class=\"bold\">Id: </span>{{selectedContainer.Id}}</p>\n          <p *ngIf=\"selectedContainer !== null\" class=\"lighter\"><span class=\"bold\">Image: </span>{{selectedContainer.Image}}</p>\n          <div class=\"log-content\" *ngIf=\"selectedContainer !== null\">\n            <div class=\"log-list\">\n              <div *ngFor='let line of selectedContainerLog'> {{line}} </div>\n            </div>\n          </div>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Refresh last 100 lines of container log.\" (click)=\"containerLog(selectedContainer.Id)\" [disabled]=\"selectedContainer === null\" matTooltip=\"Refresh last 100 line of log\">\n            <mat-icon>refresh</mat-icon>\n          </button>\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogDownload(selectedContainer.Id)\" [disabled]=\"selectedContainer === null\" matTooltip=\"Download container log\">\n            <mat-icon>download</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" [disabled]=\"selectedContainer === null || selectedContainer.State !== 'running'\" (click)=\"stopContainer(selectedContainer.Id)\" matTooltip=\"Stop container\">Stop</button>\n          <button mat-raised-button color=\"primary\" [disabled]=\"selectedContainer === null || selectedContainer.State !== 'exited'\" (click)=\"startContainer(selectedContainer.Id)\" matTooltip=\"Start container\">Start</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Agents\">group</mat-icon>\n          </div>\n          <mat-card-title>Agents</mat-card-title>\n          <mat-card-subtitle>Status</mat-card-subtitle>\n          <mat-icon color=\"{{dockerOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{dockerOnline ? 'Docker online' : 'Docker offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-action-list #agentList>\n            <mat-list-item *ngFor=\"let item of agents\">\n              <div mat-line>{{item}}</div>\n              <button mat-mini-fab color=\"primary\" (click)=\"agentDown(item)\" matTooltip=\"Down {{item}}\">\n                <mat-icon aria-label=\"Down\">stop</mat-icon>\n              </button>\n              <button mat-mini-fab color=\"primary\" (click)=\"agentUp(item)\" matTooltip=\"Up {{item}}\">\n                <mat-icon aria-label=\"Up\">play_arrow</mat-icon>\n              </button>\n            </mat-list-item>\n          </mat-action-list>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <div *ngIf=\"agentLog != ''\" class=\"agent-output caption\">\n            {{agentLog}}\n          </div>\n<!--          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogsDownload()\" [disabled]=\"!dockerOnline\" matTooltip=\"Download all container logs\">-->\n<!--            <mat-icon>download</mat-icon>-->\n<!--          </button>-->\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"]}