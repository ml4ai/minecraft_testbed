{"version":3,"sources":["webpack:///src/app/replay/create-replay/create-replay.component.ts","webpack:///src/app/replay/create-replay/create-replay.component.html","webpack:///src/app/replay/delete-replay/delete-replay.component.ts","webpack:///src/app/replay/delete-replay/delete-replay.component.html","webpack:///src/app/replay/json-replay/json-replay.component.ts","webpack:///src/app/replay/json-replay/json-replay.component.html","webpack:///src/app/replay/replay-routing.module.ts","webpack:///src/app/replay/replay.module.ts","webpack:///src/app/replay/replays/replays.component.ts","webpack:///src/app/replay/replays/replays.component.html","webpack:///src/app/replay/update-replay/update-replay.component.ts","webpack:///src/app/replay/update-replay/update-replay.component.html"],"names":["CreateReplayComponent","formBuilder","dialogRef","jsonDialog","loggingService","trialService","replayService","data","parents","trials","replays","replayParentTypes","ignore_message_list","ignore_source_list","ignore_topic_list","createReplayForm","group","replay_id","required","replay_parent_id","replay_parent_type","date","ignore_message_list_input","ignore_source_list_input","ignore_topic_list_input","useMessageBus","uuidPattern","RegExp","ignoreListPattern","dialogResult","value","console","log","JSON","stringify","close","patchValue","event","controls","reset","onlySelf","jsonDialogRef","open","panelClass","afterClosed","subscribe","result","replay","parse","json","e","readTrials","readReplays","a1","a2","id","message","add","parent","name","t","r","types","split","ignoreListType","message_type","sub_type","push","setValue","item","index","findIndex","i","splice","source","s","topic","toggleUseMessageBusChange","openJsonReplayDialog","onGenerateUUIDClick","replayParentTypeChanged","onAddIgnoreMessageListItem","onAddIgnoreSourceListItem","onAddIgnoreTopicListItem","onCancelClick","onCreateClick","selector","templateUrl","styleUrls","DeleteReplayComponent","deleteReplayForm","getRawValue","replayParent","find","trial_id","ignore_list_input","disable","onDeleteClick","JsonReplayComponent","jsonExperimentForm","onParseClick","routes","path","component","ReplayRoutingModule","forChild","imports","exports","ReplayModule","declarations","ReplaysComponent","mediaObserver","createDialog","updateDialog","deleteDialog","overlay","mqttService","dataSource","currentScreenWidth","replayCreatedSubscription","observe","TextDecoder","decode","payload","read","overlayRef","create","positionStrategy","position","global","centerHorizontally","centerVertically","hasBackdrop","flexMediaWatcher","asObservable","pipe","changes","length","change","mqAlias","setupTable","unsubscribe","displayedColumns","filterValue","target","filter","trim","toLowerCase","attach","setTimeout","detach","createReplay","sort","paginator","table","renderRows","createReplayMessage","_","updateReplay","deleteReplay","success","parent_replay_id","replay_message","generateReplayMessage","testbedVersion","createMessage","update","applyFilter","UpdateReplayComponent","updateReplayForm","onUpdateClick"],"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","file":"replay-replay-module-es5.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoggingService } from '../../logging/logging.service';\r\nimport { JsonReplayComponent } from '../../replay/json-replay/json-replay.component';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { Trial } from '../../trial/trial';\r\nimport { IgnoreListItem, Replay } from '../../replay/replay';\r\nimport { TrialService } from '../../trial/trial.service';\r\nimport { ReplayService } from '../../replay/replay.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-create-replay',\r\n  templateUrl: './create-replay.component.html',\r\n  styleUrls: ['./create-replay.component.scss']\r\n})\r\nexport class CreateReplayComponent implements OnInit {\r\n  parents: Trial[] | Replay[] = [];\r\n  trials: Trial[] = [];\r\n  replays: Replay[] = [];\r\n  replayParentTypes: string[] = ['TRIAL', 'REPLAY'];\r\n  ignore_message_list: IgnoreListItem[] = [];\r\n  ignore_source_list: string[] = [];\r\n  ignore_topic_list: string[] = [];\r\n\r\n  createReplayForm = this.formBuilder.group({\r\n    replay_id: ['', Validators.required],\r\n    replay_parent_id: ['', Validators.required],\r\n    replay_parent_type: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    ignore_message_list_input: [''],\r\n    ignore_source_list_input: [''],\r\n    ignore_topic_list_input: [''],\r\n    useMessageBus: [false]\r\n  });\r\n\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n  ignoreListPattern: RegExp = new RegExp(/.+ : .+/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<CreateReplayComponent>,\r\n    public jsonDialog: MatDialog,\r\n    private loggingService: LoggingService,\r\n    private trialService: TrialService,\r\n    private replayService: ReplayService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Replay) {\r\n  }\r\n\r\n  onCreateClick(): void {\r\n    const dialogResult = this.createReplayForm.value;\r\n    dialogResult.ignore_message_list = this.ignore_message_list;\r\n    dialogResult.ignore_source_list = this.ignore_source_list;\r\n    dialogResult.ignore_topic_list = this.ignore_topic_list;\r\n    delete dialogResult.ignore_message_list_input;\r\n    delete dialogResult.ignore_source_list_input;\r\n    delete dialogResult.ignore_topic_list_input;\r\n    console.log(JSON.stringify(dialogResult));\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.createReplayForm.patchValue({\r\n      replay_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  replayParentTypeChanged(event) {\r\n    this.createReplayForm.controls.replay_parent_id.reset('', {\r\n      onlySelf: true\r\n    });\r\n    switch (event.value) {\r\n      case 'TRIAL':\r\n        this.parents = this.trials;\r\n        break;\r\n      case 'REPLAY':\r\n        this.parents = this.replays;\r\n        break;\r\n      default:\r\n        this.parents = [];\r\n        break;\r\n    }\r\n  }\r\n\r\n  openJsonReplayDialog(): void {\r\n    const dialogResult = this.createReplayForm.value;\r\n    dialogResult.ignore_message_list = this.ignore_message_list;\r\n    dialogResult.ignore_source_list = this.ignore_source_list;\r\n    dialogResult.ignore_topic_list = this.ignore_topic_list;\r\n\r\n    delete dialogResult.useMessageBus;\r\n\r\n    const jsonDialogRef = this.jsonDialog.open(JsonReplayComponent, {\r\n      // width: '250px',\r\n      data: JSON.stringify(dialogResult, null, 2),\r\n      panelClass: 'full-width-2-dialog'\r\n    });\r\n\r\n    jsonDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        try {\r\n          const replay = JSON.parse(result.json) as Replay;\r\n          this.ignore_message_list = replay.ignore_message_list;\r\n          this.ignore_source_list = replay.ignore_source_list;\r\n          this.ignore_topic_list = replay.ignore_topic_list;\r\n          this.createReplayForm.patchValue({\r\n            replay_id: replay.replay_id,\r\n            replay_parent_id: replay.replay_parent_id,\r\n            replay_parent_type: replay.replay_parent_type,\r\n            date: replay.date,\r\n            ignore_message_list: replay.ignore_message_list,\r\n            ignore_source_list: replay.ignore_source_list,\r\n            ignore_topic_list: replay.ignore_topic_list\r\n          });\r\n        } catch (e) {\r\n          this.log(e);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleUseMessageBusChange(event: MatSlideToggleChange) {\r\n    // if (event.checked) {\r\n    //   this.createReplayForm.controls['replay_id'].reset('',{\r\n    //     onlySelf: true\r\n    //   });\r\n    //   this.createReplayForm.controls['replay_id'].disable();\r\n    // } else {\r\n    //   this.createReplayForm.controls['replay_id'].enable();\r\n    //   this.createReplayForm.controls['replay_id'].reset('',{\r\n    //     onlySelf: true\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin(\r\n      {\r\n        trials: this.trialService.readTrials(),\r\n        replays: this.replayService.readReplays()\r\n      }).subscribe(({trials, replays}) => {\r\n        this.trials = trials;\r\n        this.replays = replays;\r\n    });\r\n  }\r\n\r\n  compareFnParents(a1: any, a2: any): boolean {\r\n    return a1 && a2 ? a1.id === a2.id : a1 === a2;\r\n  }\r\n\r\n  /** Log a CreateReplayComponent message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`CreateReplayComponent: ${message}`);\r\n  }\r\n\r\n  getDisplayName(parent: Trial | Replay): string {\r\n    if ((parent as Trial).name) {\r\n      const t = parent as Trial;\r\n      return t.name;\r\n    } else {\r\n      const r = parent as Replay;\r\n      return r.replay_id;\r\n    }\r\n  }\r\n\r\n  onAddIgnoreMessageListItem(): void {\r\n    if (this.createReplayForm.controls.ignore_message_list_input.value !== '') {\r\n      const types = this.createReplayForm.controls.ignore_message_list_input.value.split(' : ');\r\n      const ignoreListType = {\r\n        message_type: types[0],\r\n        sub_type: types[1]\r\n      };\r\n      this.ignore_message_list.push(ignoreListType);\r\n      this.createReplayForm.controls.ignore_message_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreMessageListItem(item: any): void {\r\n    const index: number = this.ignore_message_list.findIndex(i => i.message_type === item.message_type && i.sub_type === item.sub_type);\r\n    if (index > -1) {\r\n      this.ignore_message_list.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onAddIgnoreSourceListItem(): void {\r\n    if (this.createReplayForm.controls.ignore_source_list_input.value !== '') {\r\n      this.ignore_source_list.push(this.createReplayForm.controls.ignore_source_list_input.value);\r\n      this.createReplayForm.controls.ignore_source_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreSourceListItem(source: any): void {\r\n    const index: number = this.ignore_source_list.findIndex(s => s === source);\r\n    if (index > -1) {\r\n      this.ignore_source_list.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onAddIgnoreTopicListItem(): void {\r\n    if (this.createReplayForm.controls.ignore_topic_list_input.value !== '') {\r\n      this.ignore_topic_list.push(this.createReplayForm.controls.ignore_topic_list_input.value);\r\n      this.createReplayForm.controls.ignore_topic_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreTopicListItem(topic: any): void {\r\n    const index: number = this.ignore_topic_list.findIndex(t => t === topic);\r\n    if (index > -1) {\r\n      this.ignore_topic_list.splice(index, 1);\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Create</h1>\r\n<div mat-dialog-content [formGroup]=\"createReplayForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Replay</legend>\r\n    <mat-form-field floatLabel=\"always\" appearance=\"none\">\r\n      <div class=\"header-row\">\r\n        <mat-slide-toggle color=\"primary\" (change)=\"toggleUseMessageBusChange($event)\" formControlName=\"useMessageBus\">Use Message Bus</mat-slide-toggle>\r\n        <textarea matInput hidden></textarea>\r\n        <button mat-fab color=\"primary\" (click)=\"openJsonReplayDialog()\" matTooltip=\"Use JSON to populate form.\">\r\n          <mat-icon aria-label=\"Create\">text_snippet</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay UUID</mat-label>\r\n      <input matInput formControlName=\"replay_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\" >\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field floatLabel=\"always\" appearance=\"none\">\r\n      <mat-label>Replay Parent Type</mat-label>\r\n      <mat-radio-group formControlName=\"replay_parent_type\" color=\"primary\" (change)=\"replayParentTypeChanged($event)\">\r\n        <mat-radio-button *ngFor=\"let replayParentType of replayParentTypes\" [value]=\"replayParentType\">\r\n          {{replayParentType}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n      <textarea matInput hidden></textarea>\r\n      <mat-error>Replay Parent Type is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Parent</mat-label>\r\n      <mat-select [compareWith]=\"compareFnParents\" formControlName=\"replay_parent_id\" placeholder=\"Replay Parent\" required>\r\n        <mat-option *ngFor=\"let parent of parents\" [value]=\"parent\">\r\n          {{getDisplayName(parent)}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Replay Parent is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Message Item</mat-label>\r\n      <input matInput placeholder=\"message_type : sub_type\" formControlName=\"ignore_message_list_input\" aria-label=\"Message Type\" [pattern]=\"ignoreListPattern\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreMessageListItem()\" [disabled]=\"createReplayForm.controls.ignore_message_list_input.value === '' || createReplayForm.controls.ignore_message_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Source Item</mat-label>\r\n      <input matInput placeholder=\"source\" formControlName=\"ignore_source_list_input\" aria-label=\"Source Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreSourceListItem()\" [disabled]=\"createReplayForm.controls.ignore_source_list_input.value === '' || createReplayForm.controls.ignore_source_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Topic Item</mat-label>\r\n      <input matInput placeholder=\"topic\" formControlName=\"ignore_topic_list_input\" aria-label=\"Topic Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreTopicListItem()\" [disabled]=\"createReplayForm.controls.ignore_topic_list_input.value === '' || createReplayForm.controls.ignore_topic_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field floatLabel=\"always\" appearance=\"fill\">\r\n      <mat-label>Ignore List</mat-label>\r\n      <mat-action-list dense>\r\n        <h3 matSubheader>Message Type</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_message_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreMessageListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Source</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_source_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreSourceListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Topic</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_topic_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreTopicListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n      </mat-action-list>\r\n      <textarea matInput hidden></textarea>\r\n    </mat-form-field>\r\n\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onCreateClick()\" [disabled]=\"!createReplayForm.valid\">Create</button>\r\n</div>\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {IgnoreListItem, Replay} from '../../replay/replay';\r\nimport { TrialService } from '../../trial/trial.service';\r\nimport { Trial } from '../../trial/trial';\r\nimport { ReplayService } from '../replay.service';\r\nimport { LoggingService } from '../../logging/logging.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-delete-replay',\r\n  templateUrl: './delete-replay.component.html',\r\n  styleUrls: ['./delete-replay.component.scss']\r\n})\r\nexport class DeleteReplayComponent implements OnInit {\r\n  parents: Trial[] | Replay[];\r\n  trials: Trial[];\r\n  replays: Replay[];\r\n  replayParentTypes: string[] = ['TRIAL', 'REPLAY'];\r\n  ignore_message_list: IgnoreListItem[] = [];\r\n  ignore_source_list: string[] = [];\r\n  ignore_topic_list: string[] = [];\r\n\r\n  deleteReplayForm = this.formBuilder.group({\r\n    id: ['', Validators.required],\r\n    replay_id: ['', Validators.required],\r\n    replay_parent_id: ['', Validators.required],\r\n    replay_parent_type: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    ignore_message_list_input: [''],\r\n    ignore_source_list_input: [''],\r\n    ignore_topic_list_input: [''],\r\n  });\r\n\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n  ignoreListPattern: RegExp = new RegExp(/.+ : .+/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<DeleteReplayComponent>,\r\n    private trialService: TrialService,\r\n    private replayService: ReplayService,\r\n    private loggingService: LoggingService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Replay) {}\r\n\r\n  onDeleteClick(): void {\r\n    this.dialogRef.close(this.deleteReplayForm.getRawValue());\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.deleteReplayForm.patchValue({\r\n      replay_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin(\r\n      {\r\n        trials: this.trialService.readTrials(),\r\n        replays: this.replayService.readReplays()\r\n      }).subscribe(({trials, replays}) => {\r\n      this.trials = trials;\r\n      this.replays = replays;\r\n      let replayParent: Trial | Replay;\r\n      switch (this.data.replay_parent_type) {\r\n        case 'TRIAL':\r\n          this.parents = this.trials;\r\n          replayParent = this.trials.find(t => t.trial_id === this.data.replay_parent_id);\r\n          break;\r\n        case 'REPLAY':\r\n          this.parents = this.replays;\r\n          replayParent = this.replays.find(t => t.replay_id === this.data.replay_parent_id);\r\n          break;\r\n        default:\r\n          this.parents = [];\r\n          break;\r\n      }\r\n\r\n      this.ignore_message_list = this.data.ignore_message_list;\r\n      this.ignore_source_list = this.data.ignore_source_list;\r\n      this.ignore_topic_list = this.data.ignore_topic_list;\r\n\r\n      this.deleteReplayForm.patchValue({\r\n        id: this.data.id,\r\n        replay_id: this.data.replay_id,\r\n        replay_parent_id: replayParent,\r\n        replay_parent_type: this.data.replay_parent_type,\r\n        date: this.data.date,\r\n        ignore_list_input: this.data.ignore_message_list,\r\n        ignore_source_list: this.data.ignore_source_list,\r\n        ignore_topic_list: this.data.ignore_topic_list,\r\n      });\r\n      this.deleteReplayForm.disable();\r\n    });\r\n  }\r\n\r\n  replayParentTypeChanged(event) {\r\n    this.deleteReplayForm.controls.replay_parent_id.reset('', {\r\n      onlySelf: true\r\n    });\r\n    switch (event.value) {\r\n      case 'TRIAL':\r\n        this.parents = this.trials;\r\n        break;\r\n      case 'REPLAY':\r\n        this.parents = this.replays;\r\n        break;\r\n      default:\r\n        this.parents = [];\r\n        break;\r\n    }\r\n  }\r\n\r\n  compareFnParents(a1: any, a2: any): boolean {\r\n    return a1 && a2 ? a1.id === a2.id : a1 === a2;\r\n  }\r\n\r\n  /** Log a CreateReplayComponent message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`DeleteReplayComponent: ${message}`);\r\n  }\r\n\r\n  getDisplayName(parent: Trial | Replay): string {\r\n    if ((parent as Trial).name) {\r\n      const t = parent as Trial;\r\n      return t.name;\r\n    } else {\r\n      const r = parent as Replay;\r\n      return r.replay_id;\r\n    }\r\n  }\r\n\r\n  // onAddIgnoreListItem(): void {\r\n  //   if (this.updateReplayForm.controls.ignore_list_input.value !== '') {\r\n  //     const types = this.updateReplayForm.controls.ignore_list_input.value.split(' : ');\r\n  //     const ignoreListType = {\r\n  //       message_type: types[0],\r\n  //       sub_type: types[1]\r\n  //     };\r\n  //     this.ignore_list.push(ignoreListType);\r\n  //     this.deleteReplayForm.controls.ignore_list_input.setValue('');\r\n  //   }\r\n  // }\r\n  //\r\n  // onRemoveIgnoreListItem(item: any): void {\r\n  //   const index: number = this.ignore_list.findIndex(i => i.message_type === item.message_type && i.sub_type === item.sub_type);\r\n  //   console.log(index);\r\n  //   if (index > -1) {\r\n  //     this.ignore_list.splice(index, 1);\r\n  //   }\r\n  // }\r\n}\r\n","<h1 mat-dialog-title>Delete</h1>\r\n<div mat-dialog-content [formGroup]=\"deleteReplayForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Replay: {{data.id}}</legend>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay UUID</mat-label>\r\n      <input matInput formControlName=\"replay_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\" >\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\" [disabled]=\"deleteReplayForm.disabled\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field floatLabel=\"always\" appearance=\"none\">\r\n      <mat-label>Replay Parent Type</mat-label>\r\n      <mat-radio-group formControlName=\"replay_parent_type\" color=\"primary\" (change)=\"replayParentTypeChanged($event)\">\r\n        <mat-radio-button *ngFor=\"let replayParentType of replayParentTypes\" [value]=\"replayParentType\">\r\n          {{replayParentType}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n      <textarea matInput hidden></textarea>\r\n      <mat-error>Replay Parent Type is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Parent</mat-label>\r\n      <mat-select [compareWith]=\"compareFnParents\" formControlName=\"replay_parent_id\" placeholder=\"Replay Parent\" required>\r\n        <mat-option *ngFor=\"let parent of parents\" [value]=\"parent\">\r\n          {{getDisplayName(parent)}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Replay Parent is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Message Item</mat-label>\r\n      <input matInput placeholder=\"message_type : sub_type\" formControlName=\"ignore_message_list_input\" aria-label=\"Message Type\" [pattern]=\"ignoreListPattern\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix [disabled]=\"deleteReplayForm.controls.ignore_message_list_input.value === '' || deleteReplayForm.controls.ignore_message_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Source Item</mat-label>\r\n      <input matInput placeholder=\"source\" formControlName=\"ignore_source_list_input\" aria-label=\"Source Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix [disabled]=\"deleteReplayForm.controls.ignore_source_list_input.value === '' || deleteReplayForm.controls.ignore_source_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Topic Item</mat-label>\r\n      <input matInput placeholder=\"topic\" formControlName=\"ignore_topic_list_input\" aria-label=\"Topic Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix [disabled]=\"deleteReplayForm.controls.ignore_topic_list_input.value === '' || deleteReplayForm.controls.ignore_topic_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field floatLabel=\"always\" appearance=\"fill\">\r\n      <mat-label>Ignore List</mat-label>\r\n      <mat-action-list dense>\r\n        <h3 matSubheader>Message Type</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_message_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button disabled>\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Source</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_source_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button disabled>\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Topic</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_topic_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button disabled>\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n      </mat-action-list>\r\n      <textarea matInput hidden></textarea>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onDeleteClick()\">Delete</button>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-json-replay',\r\n  templateUrl: './json-replay.component.html',\r\n  styleUrls: ['./json-replay.component.scss']\r\n})\r\nexport class JsonReplayComponent implements OnInit {\r\n  jsonExperimentForm = this.formBuilder.group({\r\n    json: ['']\r\n  });\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<JsonReplayComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.jsonExperimentForm.setValue({\r\n      json: this.data,\r\n    });\r\n  }\r\n\r\n  onParseClick(): void {\r\n    const dialogResult = this.jsonExperimentForm.value;\r\n\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Parse</h1>\r\n<div mat-dialog-content [formGroup]=\"jsonExperimentForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>JSON Trial</legend>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>JSON</mat-label>\r\n      <textarea matInput\r\n                cdkTextareaAutosize\r\n                #autosize=\"cdkTextareaAutosize\"\r\n                cdkAutosizeMinRows=\"20\"\r\n                cdkAutosizeMaxRows=\"20\" md-detect-hidden formControlName=\"json\" placeholder=\"{ }\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onParseClick()\" [disabled]=\"!jsonExperimentForm.valid\">Parse</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReplaysComponent } from '../replay/replays/replays.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReplaysComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReplayRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReplayRoutingModule } from './replay-routing.module';\r\nimport { ReplaysComponent } from './replays/replays.component';\r\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateReplayComponent } from './create-replay/create-replay.component';\r\nimport { UpdateReplayComponent } from './update-replay/update-replay.component';\r\nimport { DeleteReplayComponent } from './delete-replay/delete-replay.component';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { JsonReplayComponent } from './json-replay/json-replay.component';\r\n\r\n@NgModule({\r\n  declarations: [ReplaysComponent, CreateReplayComponent, UpdateReplayComponent, DeleteReplayComponent, JsonReplayComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReplayRoutingModule,\r\n    AngularMaterialModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class ReplayModule { }\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport {IgnoreListItem, Replay} from '../../replay/replay';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ReplayService } from '../../replay/replay.service';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoggingService } from '../../logging/logging.service';\r\nimport { IMqttMessage, MqttService } from 'ngx-mqtt';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ProgressSpinnerComponent } from '../../progress-spinner/progress-spinner.component';\r\nimport { ReplayMessage } from '../replay-message';\r\nimport { CreateReplayComponent } from '../../replay/create-replay/create-replay.component';\r\nimport { UpdateReplayComponent } from '../../replay/update-replay/update-replay.component';\r\nimport { DeleteReplayComponent } from '../../replay/delete-replay/delete-replay.component';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-replays',\r\n  templateUrl: './replays.component.html',\r\n  styleUrls: ['./replays.component.scss']\r\n})\r\nexport class ReplaysComponent implements OnInit, OnDestroy {\r\n  replays: Replay[];\r\n  displayedColumns: string[];\r\n  dataSource = new MatTableDataSource(this.replays);\r\n  overlayRef: OverlayRef;\r\n  private replayCreatedSubscription: Subscription;\r\n\r\n  currentScreenWidth = '';\r\n  flexMediaWatcher: Subscription;\r\n\r\n  @ViewChild(MatTable) table: MatTable<Replay>;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private replayService: ReplayService,\r\n    private mediaObserver: MediaObserver,\r\n    public createDialog: MatDialog,\r\n    public updateDialog: MatDialog,\r\n    public deleteDialog: MatDialog,\r\n    private loggingService: LoggingService,\r\n    private overlay: Overlay,\r\n    private mqttService: MqttService\r\n  ) {\r\n\r\n    this.replayCreatedSubscription = this.mqttService.observe('metadata/replay/created').subscribe((message: IMqttMessage) => {\r\n      const json = new TextDecoder('utf-8').decode(message.payload);\r\n      // let replay = <Replay>JSON.parse(json);\r\n      this.log('Replay created: ' + json);\r\n      this.read();\r\n    });\r\n\r\n    // this.flexMediaWatcher = mediaObserver.media$.subscribe((change: MediaChange) => {\r\n    //   if (change.mqAlias !== this.currentScreenWidth) {\r\n    //     this.currentScreenWidth = change.mqAlias;\r\n    //     this.setupTable();\r\n    //   }\r\n    // });\r\n\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically(),\r\n      hasBackdrop: true\r\n    });\r\n\r\n    this.flexMediaWatcher = mediaObserver.asObservable()\r\n      .pipe(\r\n        filter((changes: MediaChange[]) => changes.length > 0),\r\n        map((changes: MediaChange[]) => changes[0])\r\n      ).subscribe((change: MediaChange) => {\r\n        if (change.mqAlias !== this.currentScreenWidth) {\r\n          this.currentScreenWidth = change.mqAlias;\r\n          this.setupTable();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.read();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.flexMediaWatcher.unsubscribe();\r\n    this.replayCreatedSubscription.unsubscribe();\r\n  }\r\n\r\n  setupTable() {\r\n    this.displayedColumns = ['id', 'replay_id', 'replay_parent_id', 'replay_parent_type', 'date', 'ignore_message_list', 'ignore_source_list', 'ignore_topic_list', 'actions'];\r\n    if (this.currentScreenWidth === 'xs') {\r\n      this.displayedColumns = ['replay_id', 'replay_parent_id', 'replay_parent_type'];\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  showOverlay() {\r\n    this.overlayRef.attach(new ComponentPortal(ProgressSpinnerComponent));\r\n    setTimeout(() => {\r\n      this.overlayRef.detach();\r\n      this.read();\r\n    }, 3000);\r\n  }\r\n\r\n  create(replay: Replay): void {\r\n    if (!replay) { return; }\r\n    this.replayService.createReplay(replay)\r\n      .subscribe(e => {\r\n        if (e) {\r\n          this.log(`Replay has been created: ${e.id}`);\r\n          this.replays.push(e);\r\n\r\n          this.dataSource.data = this.replays;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  createMessage(replay: ReplayMessage): void {\r\n    if (!replay) { return; }\r\n    this.replayService.createReplayMessage(replay)\r\n      .subscribe(_ => {\r\n        // this.log(`Replay message has been created using message bus.`);\r\n        // this.showOverlay();\r\n      });\r\n    // this.table.renderRows();\r\n  }\r\n\r\n  read(): void {\r\n    this.replayService.readReplays()\r\n      .subscribe(replays => {\r\n        this.replays = replays;\r\n        this.dataSource = new MatTableDataSource(this.replays);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n  }\r\n\r\n  update(index: number, replay: Replay): void {\r\n    if (!replay) { return; }\r\n    if (!replay.id) { return; }\r\n    this.replayService.updateReplay(replay)\r\n      .subscribe(e => {\r\n        if (e) {\r\n          this.log(`Replay has been updated: ${e.id}`);\r\n          this.replays[index] = e;\r\n\r\n          this.dataSource.data = this.replays;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  delete(index: number,  replay: Replay): void {\r\n    if (!replay) { return; }\r\n    this.replayService.deleteReplay(replay.id)\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.log(`Replay has been deleted: ${replay.id}`);\r\n          this.dataSource.data.splice(index, 1);\r\n\r\n          this.dataSource.data = this.replays;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  openCreateReplayDialog(): void {\r\n    const dialogRef = this.createDialog.open(CreateReplayComponent, {\r\n      // width: '250px',\r\n      // data: {name: this.name, animal: this.animal}\r\n      panelClass: 'full-width-1-dialog'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      const parent_replay_id = result.replay_parent_type === 'TRIAL' ? result.replay_parent_id.trial_id : result.replay_parent_id.replay_id;\r\n      if (result.useMessageBus) {\r\n        const replay_message = this.replayService.generateReplayMessage('', '', parent_replay_id, result.replay_parent_type, result.ignore_message_list, result.ignore_source_list, result.ignore_topic_list, 'create', 'metadata-web', environment.testbedVersion);\r\n        this.createMessage(replay_message);\r\n      } else {\r\n        const replay = {\r\n          id: -1,\r\n          replay_id: result.replay_id,\r\n          replay_parent_id: parent_replay_id,\r\n          replay_parent_type: result.replay_parent_type,\r\n          date: result.date,\r\n          ignore_message_list: result.ignore_message_list,\r\n          ignore_source_list: result.ignore_source_list,\r\n          ignore_topic_list: result.ignore_topic_list\r\n        };\r\n        this.create(replay);\r\n      }\r\n    });\r\n  }\r\n\r\n  openUpdateReplayDialog(index: number, id: number, replay_id: string, replay_parent_id: string, replay_parent_type: string, date: string, ignore_message_list: IgnoreListItem[], ignore_source_list: string[], ignore_topic_list: string[]) {\r\n    const dialogRef = this.updateDialog.open(UpdateReplayComponent, {\r\n      data: { id, replay_id, replay_parent_id, replay_parent_type, date, ignore_message_list, ignore_source_list, ignore_topic_list }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) { return; }\r\n      const parent_replay_id = result.replay_parent_type === 'TRIAL' ? result.replay_parent_id.trial_id : result.replay_parent_id.replay_id;\r\n      result.replay_parent_id = parent_replay_id;\r\n      this.update(index, result);\r\n    });\r\n  }\r\n\r\n  openDeleteReplayDialog(index: number, id: number, replay_id: string, replay_parent_id: string, replay_parent_type: string, date: string, ignore_message_list: IgnoreListItem[], ignore_source_list: string[], ignore_topic_list: string[]) {\r\n    const dialogRef = this.deleteDialog.open(DeleteReplayComponent, {\r\n      data: { id, replay_id, replay_parent_id, replay_parent_type, date, ignore_message_list, ignore_source_list, ignore_topic_list }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.delete(index, result);\r\n    });\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.loggingService.add(`ReplayComponent: ${message}`);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <h2>Replays</h2>\r\n\r\n  <div fxLayout=\"column\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Filter Table</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" autocomplete=\"off\">\r\n    </mat-form-field>\r\n\r\n    <div class=\"table-container\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n\r\n        <!-- ID Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Replay ID Column -->\r\n        <ng-container matColumnDef=\"replay_id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Replay ID </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.replay_id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Replay Parent Type Column -->\r\n        <ng-container matColumnDef=\"replay_parent_type\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Parent Type </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.replay_parent_type}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Replay Parent ID Column -->\r\n        <ng-container matColumnDef=\"replay_parent_id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Parent ID </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.replay_parent_id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Date Column -->\r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.date}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Ignore Message List Column -->\r\n        <ng-container matColumnDef=\"ignore_message_list\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Ignore Message List </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.ignore_message_list | json}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Ignore Source List Column -->\r\n        <ng-container matColumnDef=\"ignore_source_list\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Ignore Source List </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.ignore_source_list | json}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Ignore Topic List Column -->\r\n        <ng-container matColumnDef=\"ignore_topic_list\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Ignore Topic List </th>\r\n          <td mat-cell *matCellDef=\"let replay\"> {{replay.ignore_topic_list | json}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell class=\"create-button\" *matHeaderCellDef>\r\n            <button mat-icon-button (click)=\"openCreateReplayDialog()\">\r\n              <mat-icon aria-label=\"Create\">add_circle</mat-icon>\r\n            </button>\r\n          </th>\r\n\r\n          <td mat-cell *matCellDef=\"let row; let i = index;\">\r\n            <div class=\"mat-cell-buttons\">\r\n              <button mat-icon-button color=\"accent\" (click)=\"openUpdateReplayDialog(this.paginator.pageIndex == 0 ?  i : i + this.paginator.pageIndex * this.paginator.pageSize, row.id, row.replay_id, row.replay_parent_id, row.replay_parent_type, row.date, row.ignore_message_list, row.ignore_source_list, row.ignore_topic_list)\">\r\n                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n              </button>\r\n\r\n              <button mat-icon-button color=\"accent\" (click)=\"openDeleteReplayDialog(this.paginator.pageIndex == 0 ?  i : i + this.paginator.pageIndex * this.paginator.pageSize, row.id, row.replay_id, row.replay_parent_id, row.replay_parent_type, row.date, row.ignore_message_list, row.ignore_source_list, row.ignore_topic_list)\">\r\n                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-results\" [style.display]=\"dataSource.data.length == 0 ? '' : 'none'\">\r\n        No results\r\n      </div>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {IgnoreListItem, Replay} from '../../replay/replay';\r\nimport { forkJoin} from 'rxjs';\r\nimport { Trial } from '../../trial/trial';\r\nimport { TrialService } from '../../trial/trial.service';\r\nimport { ReplayService } from '../replay.service';\r\nimport { LoggingService } from '../../logging/logging.service';\r\n\r\n@Component({\r\n  selector: 'app-update-replay',\r\n  templateUrl: './update-replay.component.html',\r\n  styleUrls: ['./update-replay.component.scss']\r\n})\r\nexport class UpdateReplayComponent implements OnInit {\r\n  parents: Trial[] | Replay[];\r\n  trials: Trial[];\r\n  replays: Replay[];\r\n  replayParentTypes: string[] = ['TRIAL', 'REPLAY'];\r\n  ignore_message_list: IgnoreListItem[] = [];\r\n  ignore_source_list: string[] = [];\r\n  ignore_topic_list: string[] = [];\r\n\r\n  updateReplayForm = this.formBuilder.group({\r\n    id: ['', Validators.required],\r\n    replay_id: ['', Validators.required],\r\n    replay_parent_id: ['', Validators.required],\r\n    replay_parent_type: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    ignore_message_list_input: [''],\r\n    ignore_source_list_input: [''],\r\n    ignore_topic_list_input: [''],\r\n  });\r\n\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n  ignoreListPattern: RegExp = new RegExp(/.+ : .+/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<UpdateReplayComponent>,\r\n    private trialService: TrialService,\r\n    private replayService: ReplayService,\r\n    private loggingService: LoggingService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Replay) {}\r\n\r\n  onUpdateClick(): void {\r\n    const dialogResult = this.updateReplayForm.value;\r\n    dialogResult.ignore_message_list = this.ignore_message_list;\r\n    dialogResult.ignore_source_list = this.ignore_source_list;\r\n    dialogResult.ignore_topic_list = this.ignore_topic_list;\r\n    delete dialogResult.ignore_message_list_input;\r\n    delete dialogResult.ignore_source_list_input;\r\n    delete dialogResult.ignore_topic_list_input;\r\n    console.log(JSON.stringify(dialogResult));\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.updateReplayForm.patchValue({\r\n      replay_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin(\r\n      {\r\n        trials: this.trialService.readTrials(),\r\n        replays: this.replayService.readReplays()\r\n      }).subscribe(({trials, replays}) => {\r\n      this.trials = trials;\r\n      this.replays = replays;\r\n      let replayParent: Trial | Replay;\r\n      switch (this.data.replay_parent_type) {\r\n        case 'TRIAL':\r\n          this.parents = this.trials;\r\n          replayParent = this.trials.find(t => t.trial_id === this.data.replay_parent_id);\r\n          break;\r\n        case 'REPLAY':\r\n          this.parents = this.replays;\r\n          replayParent = this.replays.find(t => t.replay_id === this.data.replay_parent_id);\r\n          break;\r\n        default:\r\n          this.parents = [];\r\n          break;\r\n      }\r\n\r\n      this.ignore_message_list = this.data.ignore_message_list;\r\n      this.ignore_source_list = this.data.ignore_source_list;\r\n      this.ignore_topic_list = this.data.ignore_topic_list;\r\n\r\n      this.updateReplayForm.patchValue({\r\n        id: this.data.id,\r\n        replay_id: this.data.replay_id,\r\n        replay_parent_id: replayParent,\r\n        replay_parent_type: this.data.replay_parent_type,\r\n        date: this.data.date,\r\n        ignore_message_list: this.data.ignore_message_list,\r\n        ignore_source_list: this.data.ignore_source_list,\r\n        ignore_topic_list: this.data.ignore_topic_list,\r\n      });\r\n    });\r\n  }\r\n\r\n  replayParentTypeChanged(event) {\r\n    this.updateReplayForm.controls.replay_parent_id.reset('', {\r\n      onlySelf: true\r\n    });\r\n    switch (event.value) {\r\n      case 'TRIAL':\r\n        this.parents = this.trials;\r\n        break;\r\n      case 'REPLAY':\r\n        this.parents = this.replays;\r\n        break;\r\n      default:\r\n        this.parents = [];\r\n        break;\r\n    }\r\n  }\r\n\r\n  compareFnParents(a1: any, a2: any): boolean {\r\n    return a1 && a2 ? a1.id === a2.id : a1 === a2;\r\n  }\r\n\r\n  /** Log a CreateReplayComponent message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`UpdateReplayComponent: ${message}`);\r\n  }\r\n\r\n  getDisplayName(parent: Trial | Replay): string {\r\n    if ((parent as Trial).name) {\r\n      const t = parent as Trial;\r\n      return t.name;\r\n    } else {\r\n      const r = parent as Replay;\r\n      return r.replay_id;\r\n    }\r\n  }\r\n\r\n  onAddIgnoreMessageListItem(): void {\r\n    if (this.updateReplayForm.controls.ignore_message_list_input.value !== '') {\r\n      const types = this.updateReplayForm.controls.ignore_message_list_input.value.split(' : ');\r\n      const ignoreListType = {\r\n        message_type: types[0],\r\n        sub_type: types[1]\r\n      };\r\n      this.ignore_message_list.push(ignoreListType);\r\n      this.updateReplayForm.controls.ignore_message_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreMessageListItem(item: any): void {\r\n    const index: number = this.ignore_message_list.findIndex(i => i.message_type === item.message_type && i.sub_type === item.sub_type);\r\n    if (index > -1) {\r\n      this.ignore_message_list.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onAddIgnoreSourceListItem(): void {\r\n    if (this.updateReplayForm.controls.ignore_source_list_input.value !== '') {\r\n      this.ignore_source_list.push(this.updateReplayForm.controls.ignore_source_list_input.value);\r\n      this.updateReplayForm.controls.ignore_source_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreSourceListItem(source: any): void {\r\n    const index: number = this.ignore_source_list.findIndex(s => s === source);\r\n    if (index > -1) {\r\n      this.ignore_source_list.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  onAddIgnoreTopicListItem(): void {\r\n    if (this.updateReplayForm.controls.ignore_topic_list_input.value !== '') {\r\n      this.ignore_topic_list.push(this.updateReplayForm.controls.ignore_topic_list_input.value);\r\n      this.updateReplayForm.controls.ignore_topic_list_input.setValue('');\r\n    }\r\n  }\r\n\r\n  onRemoveIgnoreTopicListItem(topic: any): void {\r\n    const index: number = this.ignore_topic_list.findIndex(t => t === topic);\r\n    if (index > -1) {\r\n      this.ignore_topic_list.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Update</h1>\r\n<div mat-dialog-content [formGroup]=\"updateReplayForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Replay: {{data.id}}</legend>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay UUID</mat-label>\r\n      <input matInput formControlName=\"replay_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\" >\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field floatLabel=\"always\" appearance=\"none\">\r\n      <mat-label>Replay Parent Type</mat-label>\r\n      <mat-radio-group formControlName=\"replay_parent_type\" color=\"primary\" (change)=\"replayParentTypeChanged($event)\">\r\n        <mat-radio-button *ngFor=\"let replayParentType of replayParentTypes\" [value]=\"replayParentType\">\r\n          {{replayParentType}}\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n      <textarea matInput hidden></textarea>\r\n      <mat-error>Replay Parent Type is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Parent</mat-label>\r\n      <mat-select [compareWith]=\"compareFnParents\" formControlName=\"replay_parent_id\" placeholder=\"Replay Parent\" required>\r\n        <mat-option *ngFor=\"let parent of parents\" [value]=\"parent\">\r\n          {{getDisplayName(parent)}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Replay Parent is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Replay Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Message Item</mat-label>\r\n      <input matInput placeholder=\"message_type : sub_type\" formControlName=\"ignore_message_list_input\" aria-label=\"Message Type\" [pattern]=\"ignoreListPattern\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreMessageListItem()\" [disabled]=\"updateReplayForm.controls.ignore_message_list_input.value === '' || updateReplayForm.controls.ignore_message_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Source Item</mat-label>\r\n      <input matInput placeholder=\"source\" formControlName=\"ignore_source_list_input\" aria-label=\"Source Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreSourceListItem()\" [disabled]=\"updateReplayForm.controls.ignore_source_list_input.value === '' || updateReplayForm.controls.ignore_source_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"mat-form-field-cursor\">\r\n      <mat-label>Add Ignore Topic Item</mat-label>\r\n      <input matInput placeholder=\"topic\" formControlName=\"ignore_topic_list_input\" aria-label=\"Topic Type\" autocomplete=\"off\">\r\n      <mat-error>Please use a valid string.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onAddIgnoreTopicListItem()\" [disabled]=\"updateReplayForm.controls.ignore_topic_list_input.value === '' || updateReplayForm.controls.ignore_topic_list_input.invalid\">\r\n        <mat-icon aria-label=\"Add\">add_circle</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field floatLabel=\"always\" appearance=\"fill\">\r\n      <mat-label>Ignore List</mat-label>\r\n      <mat-action-list dense>\r\n        <h3 matSubheader>Message Type</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_message_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreMessageListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Source</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_source_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreSourceListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n        <h3 matSubheader>Topic</h3>\r\n        <mat-list-item *ngFor=\"let item of ignore_topic_list;\">\r\n          <div mat-line>\r\n            <small>{{item | json}}</small>\r\n          </div>\r\n          <button mat-icon-button (click)=\"onRemoveIgnoreTopicListItem(item)\">\r\n            <mat-icon aria-label=\"Remove Item\">clear</mat-icon>\r\n          </button>\r\n        </mat-list-item>\r\n      </mat-action-list>\r\n      <textarea matInput hidden></textarea>\r\n    </mat-form-field>\r\n\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onUpdateClick()\" [disabled]=\"!updateReplayForm.valid\">Update</button>\r\n</div>\r\n\r\n"]}