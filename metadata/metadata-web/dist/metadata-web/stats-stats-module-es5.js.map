{"version":3,"sources":["webpack:///src/app/stats/first-look/first-look.component.ts","webpack:///src/app/stats/first-look/first-look.component.html","webpack:///src/app/stats/stats-routing.module.ts","webpack:///src/app/stats/stats.module.ts","webpack:///src/app/stats/stats/stats.component.ts","webpack:///src/app/stats/stats/stats.component.html"],"names":["FirstLookComponent","formBuilder","elasticsearch","loggingService","trialService","replayService","healthStatusService","mqttService","isFirstLookRunning","metadataAppOnline","areResultsReady","firstLookReport","replays","trials","parents","firstLookTypes","indices","firstLookData","firstLookTests","firstLookIdControl","control","value","disabled","required","firstLookTypeControl","overrideFirstLookIdToggleControl","firstLookIdEnteredControl","indexNameControl","overrideIndexNameToggleControl","indexNameEnteredControl","runFirstLookForm","group","firstLookId","firstLookType","overrideFirstLookIdToggle","firstLookIdEntered","indexName","overrideIndexNameToggle","indexNameEntered","uuidPattern","RegExp","indexPattern","isReplayCreatedSubscription","isReplayCreated","subscribe","valueChanges","checked","reset","disable","enable","readTrials","readReplays","filteredFirstLooks","pipe","parent","_filterParentStates","trialCreatedSubscription","observe","readParents","replayCreatedSubscription","metadataAppOnlineSubscription","isMetadataAppOnline","isOnline","indexSubscription","selected","filteredIndices","index","_filterIndexStates","slice","setValue","event","unsubscribe","name","t","r","replay_id","option","patchValue","firstLookIndexName","trial_id","id","is_replay","results","total_documents","trial","undefined","getReplayRootTrial","getDocumentCount","then","documentCountResult","count","tests","map","element","getMessageCount","message_type","sub_type","messageCountResult","valid","isFirstLookItemValid","push","comparison","result","Promise","all","console","log","JSON","stringify","readTrialUUID","dataString","encodeURIComponent","downloadLink","document","createElement","setAttribute","body","appendChild","click","remove","firstLook","operator","filteredList","filterValue","toLowerCase","forEach","toString","includes","filter","message","add","firstLookTypeChanged","updateIndexSelection","onRunClick","onClearClick","generateReport","selector","templateUrl","styleUrls","routes","path","component","StatsRoutingModule","forChild","imports","exports","StatsModule","declarations","StatsComponent","metadataAppService","elasticsearchBusy","$event","returnValue","healthTimer","elasticsearchBusySubscription","isElasticsearchBusy","isBusy","source","val","updateHealth","getHealth","setMetadataAppOnline","setMetadataAppElasticsearchOnline","status","details","setMetadataAppMqttClientOnline","setMetadataAppPostgresClientOnline","setMetadataAppDiscoveryClientOnline","diskSpace","setMetadataAppDiskSpaceOnline"],"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","file":"stats-stats-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { forkJoin, Observable, Subscription} from 'rxjs';\nimport { Replay } from '../../replay/replay';\nimport { Trial } from '../../trial/trial';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ElasticsearchService } from '../../dashboard/elasticsearch';\nimport { LoggingService } from '../../logging/logging.service';\nimport { TrialService } from '../../trial/trial.service';\nimport { ReplayService } from '../../replay/replay.service';\nimport { HealthStatusService } from '../../dashboard/health-status/health-status.service';\nimport { MqttService } from 'ngx-mqtt';\nimport { map, startWith } from 'rxjs/operators';\nimport firstLookDataJson from './first-look-data.json';\nimport { FirstLook } from './first-look';\nimport { FirstLookReport } from './first-look-report';\n\n@Component({\n  selector: 'app-first-look',\n  templateUrl: './first-look.component.html',\n  styleUrls: ['./first-look.component.scss']\n})\nexport class FirstLookComponent implements OnInit, OnDestroy {\n  private indexSubscription: Subscription;\n\n  private isReplayCreatedSubscription: Subscription;\n  public isFirstLookRunning = false;\n\n  private trialCreatedSubscription: Subscription;\n  private replayCreatedSubscription: Subscription;\n\n  private metadataAppOnlineSubscription: Subscription;\n  public metadataAppOnline = false;\n\n  public areResultsReady = false;\n\n  public firstLookReport: FirstLookReport = null;\n\n  replays: Replay[] = [];\n  trials: Trial[] = [];\n  parents: Trial[] | Replay[] = [];\n  firstLookTypes: string[] = ['TRIAL', 'REPLAY'];\n  filteredFirstLooks: Observable<Trial[] | Replay[]>;\n\n  indices: any[] = [];\n  filteredIndices: Observable<any[]>;\n\n  // replayProgress = '';\n\n  firstLookData: FirstLook[] = [];\n  firstLookTests: any[] = [];\n\n  firstLookIdControl = this.formBuilder.control({value: '', disabled: false}, Validators.required);\n  firstLookTypeControl = this.formBuilder.control({value: '', disabled: false}, Validators.required);\n  overrideFirstLookIdToggleControl = this.formBuilder.control(false);\n  firstLookIdEnteredControl = this.formBuilder.control({value: '', disabled: true}, Validators.required);\n\n  indexNameControl = this.formBuilder.control({ value: '', disabled: false }, Validators.required);\n  overrideIndexNameToggleControl = this.formBuilder.control(false);\n  indexNameEnteredControl = this.formBuilder.control({value: '', disabled: true });\n\n  runFirstLookForm = this.formBuilder.group({\n    firstLookId: this.firstLookIdControl,\n    firstLookType: this.firstLookTypeControl,\n    overrideFirstLookIdToggle: this.overrideFirstLookIdToggleControl,\n    firstLookIdEntered: this.firstLookIdEnteredControl,\n    indexName: this.indexNameControl,\n    overrideIndexNameToggle: this.overrideIndexNameToggleControl,\n    indexNameEntered: this.indexNameEnteredControl,\n  });\n\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\n  indexPattern: RegExp = new RegExp(/(?=[a-z0-9_\\-])(?!.*[\\s,:\"*+\\/\\\\|?#><]+)(?!_|-)/);\n  // firstLookId: string;\n  // firstLookIndexName: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public elasticsearch: ElasticsearchService,\n    private loggingService: LoggingService,\n    private trialService: TrialService,\n    private replayService: ReplayService,\n    private healthStatusService: HealthStatusService,\n    private mqttService: MqttService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firstLookData = firstLookDataJson as FirstLook[];\n    // this.firstLookId = '';\n    // this.firstLookIndexName = '';\n    this.firstLookTests = [];\n    this.isReplayCreatedSubscription = this.replayService.isReplayCreated.subscribe(isReplayCreated => {\n      this.isFirstLookRunning = isReplayCreated;\n    });\n    this.overrideFirstLookIdToggleControl.valueChanges.subscribe((checked) => {\n      if (checked) {\n        this.firstLookIdControl.reset();\n        this.firstLookIdControl.disable();\n        // this.replayParentTypeControl.disable();\n        // this.replayParentTypeControl.reset();\n        this.firstLookIdEnteredControl.enable();\n      } else {\n        this.firstLookIdControl.enable();\n        this.firstLookIdControl.reset();\n        // this.replayParentTypeControl.enable();\n        // this.replayParentTypeControl.reset();\n        this.firstLookIdEnteredControl.reset();\n        this.firstLookIdEnteredControl.disable();\n      }\n    });\n    this.overrideIndexNameToggleControl.valueChanges.subscribe((checked) => {\n      if (checked) {\n        this.indexNameControl.reset();\n        this.indexNameControl.disable();\n        this.indexNameEnteredControl.enable();\n        // this.clearReplayControls();\n      } else {\n        this.indexNameControl.enable();\n        this.indexNameEnteredControl.reset();\n        this.indexNameEnteredControl.disable();\n        // this.clearReplayControls();\n      }\n    });\n    forkJoin(\n      {\n        trials: this.trialService.readTrials(),\n        replays: this.replayService.readReplays()\n      }).subscribe(({trials, replays}) => {\n      this.trials = trials;\n      this.replays = replays;\n      this.filteredFirstLooks = this.firstLookIdControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(parent => this._filterParentStates(parent))\n        );\n    });\n    this.trialCreatedSubscription = this.mqttService.observe('metadata/trial/created').subscribe(() => {\n      this.readParents();\n    });\n    this.replayCreatedSubscription = this.mqttService.observe('metadata/replay/created').subscribe(() => {\n      this.readParents();\n    });\n    this.metadataAppOnlineSubscription = this.healthStatusService.isMetadataAppOnline.subscribe(isOnline => {\n      if (this.metadataAppOnline !== isOnline) {\n        this.readParents();\n      }\n      this.metadataAppOnline = isOnline;\n    });\n    this.indexSubscription = this.elasticsearch.indices.subscribe(indices => {\n      const selected = this.indexNameControl.value;\n      this.indices = indices;\n      this.filteredIndices = this.indexNameControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(index => index ? this._filterIndexStates(index) : this.indices.slice())\n        );\n      this.indexNameControl.setValue(selected);\n    });\n  }\n\n  readParents(): void {\n    forkJoin(\n      {\n        trials: this.trialService.readTrials(),\n        replays: this.replayService.readReplays()\n      }).subscribe(({trials, replays}) => {\n      this.trials = trials;\n      this.replays = replays;\n      const selected = this.firstLookIdControl.value;\n      this.firstLookIdControl.setValue(selected);\n      this.filteredFirstLooks = this.firstLookIdControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(parent => this._filterParentStates(parent))\n        );\n    });\n  }\n\n  firstLookTypeChanged(event) {\n    switch (event.value) {\n      case 'TRIAL':\n        this.parents = this.trials;\n        break;\n      case 'REPLAY':\n        this.parents = this.replays;\n        break;\n      default:\n        this.parents = [];\n        break;\n    }\n    // const selected = this.replayParentIdControl.value;\n    this.firstLookIdControl.setValue('');\n  }\n\n  ngOnDestroy(): void {\n    this.indexSubscription.unsubscribe();\n    this.isReplayCreatedSubscription.unsubscribe();\n    this.metadataAppOnlineSubscription.unsubscribe();\n    this.trialCreatedSubscription.unsubscribe();\n    this.replayCreatedSubscription.unsubscribe();\n  }\n\n  displayFirstLookIdFn(parent: Trial | Replay): string {\n    if (!parent) {\n      return '';\n    }\n    if ((parent as Trial).name) {\n      const t = parent as Trial;\n      return t.name;\n    } else {\n      const r = parent as Replay;\n      return r.replay_id;\n    }\n  }\n\n  getDisplayName(parent: Trial | Replay): string {\n    if ((parent as Trial).name) {\n      const t = parent as Trial;\n      return t.name;\n    } else {\n      const r = parent as Replay;\n      return r.replay_id;\n    }\n  }\n\n  updateIndexSelection(event): void {\n    // this.clearReplayControls();\n    const index = event.option.value;\n    this.indexNameEnteredControl.enable();\n    this.runFirstLookForm.patchValue({\n      indexNameEnteredControl: index\n    });\n    this.indexNameEnteredControl.disable();\n  }\n\n  displayIndexNameFn(index: any): string {\n    return index && index.index ? index.index : '';\n  }\n\n  onClearClick() {\n    this.runFirstLookForm.reset();\n    this.firstLookIdControl.enable();\n    this.firstLookIdEnteredControl.disable();\n    this.indexNameControl.enable();\n    this.indexNameEnteredControl.disable();\n    this.parents = [];\n    // this.firstLookId = '';\n    this.firstLookData = [];\n    this.firstLookTests = [];\n    this.isFirstLookRunning = false;\n    this.areResultsReady = false;\n    this.firstLookReport = null;\n  }\n\n  onRunClick(): void {\n    this.isFirstLookRunning = true;\n    const parent = this.firstLookIdControl.value;\n    const firstLookType = this.firstLookTypeControl.value;\n    let firstLookId = '';\n    let firstLookIndexName = '';\n    if (!this.overrideFirstLookIdToggleControl.value) {\n      firstLookId = this.firstLookIdControl.value['msg.replay_id'];\n      if (firstLookType === 'TRIAL') {\n        const t = parent as Trial;\n        firstLookId = t.trial_id;\n      } else if (firstLookType === 'REPLAY') {\n        const r = parent as Replay;\n        firstLookId = r.replay_id;\n      }\n    } else {\n      firstLookId = this.firstLookIdEnteredControl.value;\n    }\n\n    if (!this.overrideIndexNameToggleControl.value) {\n      firstLookIndexName = this.indexNameControl.value.index;\n    } else {\n      firstLookIndexName = this.indexNameEnteredControl.value;\n    }\n\n    // filename = `TrialMessages_CondBtwn-${this.trialIdControl.value.condition}_CondWin-${this.trialIdControl.value.experiment.mission}-StaticMap_Trial-${this.trialIdControl.value.trial_number}_Team-na_Member-${this.trialIdControl.value.subjects.join('-')}_Vers-${this.trialIdControl.value.testbed_version}`;\n    this.firstLookReport = {id: '', index: '', is_replay: false, results: [], total_documents: 0, trial: undefined};\n    if (firstLookType === 'REPLAY') {\n      this.replayService.getReplayRootTrial(firstLookId).subscribe(trial => {\n        this.firstLookReport.trial = trial;\n        this.firstLookReport.is_replay = true;\n        this.firstLookReport.id = firstLookId;\n        this.firstLookReport.index = firstLookIndexName;\n        this.elasticsearch.getDocumentCount(firstLookIndexName, firstLookType, firstLookId).then(documentCountResult => {\n          this.firstLookReport.total_documents = documentCountResult.count;\n          const tests = this.firstLookData.map((element, index) => {\n            return this.elasticsearch.getMessageCount(firstLookIndexName, firstLookType, firstLookId, element.message_type, element.sub_type).then(messageCountResult => {\n              this.firstLookTests[index] = {\n                valid: this.isFirstLookItemValid(element, messageCountResult.count)\n              };\n              this.firstLookReport.results.push({\n                message_type: element.message_type,\n                sub_type: element.sub_type,\n                comparison: element.comparison,\n                result: this.firstLookTests[index].valid,\n                count: messageCountResult.count\n              });\n            });\n          });\n          Promise.all(tests).then(() => {\n            console.log(JSON.stringify(this.firstLookReport));\n            this.isFirstLookRunning = false;\n            this.areResultsReady = true;\n          });\n        });\n      });\n    } else if (firstLookType === 'TRIAL') {\n      this.trialService.readTrialUUID(firstLookId).subscribe(trial => {\n        this.firstLookReport.trial = trial;\n        this.firstLookReport.is_replay = false;\n        this.firstLookReport.id = firstLookId;\n        this.firstLookReport.index = firstLookIndexName;\n        this.elasticsearch.getDocumentCount(firstLookIndexName, firstLookType, firstLookId).then(documentCountResult => {\n          this.firstLookReport.total_documents = documentCountResult.count;\n          const tests = this.firstLookData.map((element, index) => {\n            return this.elasticsearch.getMessageCount(firstLookIndexName, firstLookType, firstLookId, element.message_type, element.sub_type).then(messageCountResult => {\n              this.firstLookTests[index] = {\n                valid: this.isFirstLookItemValid(element, messageCountResult.count)\n              };\n              this.firstLookReport.results.push({\n                message_type: element.message_type,\n                sub_type: element.sub_type,\n                comparison: element.comparison,\n                result: this.firstLookTests[index].valid,\n                count: messageCountResult.count\n              });\n            });\n          });\n          Promise.all(tests).then(() => {\n            console.log(JSON.stringify(this.firstLookReport));\n            this.isFirstLookRunning = false;\n            this.areResultsReady = true;\n          });\n        });\n      });\n    }\n  }\n\n  generateReport() {\n    if (this.areResultsReady) {\n      const dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.firstLookReport));\n      const downloadLink = document.createElement('a');\n      downloadLink.setAttribute('href', dataString);\n      downloadLink.setAttribute('download', 'firstlook.json');\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      downloadLink.remove();\n    }\n\n    // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n    // var downloadAnchorNode = document.createElement('a');\n    // downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    // downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n    // document.body.appendChild(downloadAnchorNode); // required for firefox\n    // downloadAnchorNode.click();\n    // downloadAnchorNode.remove();\n  }\n\n  private isFirstLookItemValid(firstLook: FirstLook, count: number): boolean {\n    switch (firstLook.comparison.operator) {\n      case '>=':\n        return firstLook.comparison.value >= count;\n      case '==':\n        return firstLook.comparison.value === count;\n      default:\n        return false;\n    }\n  }\n\n  private _filterParentStates(value: any): any[] {\n    const filteredList: any[] = [];\n    if (value === null) {\n      return filteredList;\n    }\n    let filterValue = '';\n    if (value.name) {\n      filterValue = value.name.toLowerCase();\n    } else if (value.replay_id) {\n      filterValue = value.replay_id.toLowerCase();\n    } else {\n      filterValue = value.toLowerCase();\n    }\n    this.parents.forEach(parent => {\n      if ((parent as Trial).name) {\n        const t = parent as Trial;\n        if (t.name.toString().toLowerCase().includes(filterValue)) {\n          filteredList.push(t);\n        }\n      } else {\n        const r = parent as Replay;\n        if (r.replay_id.toString().toLowerCase().includes(filterValue)) {\n          filteredList.push(r);\n        }\n      }\n    });\n    return filteredList;\n    // return this.parents.filter(parent => replay['msg.replay_id'].toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _filterIndexStates(value: any): any[] {\n    if (value.index) {\n      const filterValue = value.index.toLowerCase();\n      return this.indices.filter(option => option.index.toString().toLowerCase().includes(filterValue));\n    } else {\n      const filterValue = value.toLowerCase();\n      return this.indices.filter(option => option.index.toString().toLowerCase().includes(filterValue));\n    }\n  }\n\n  private log(message: string) {\n    this.loggingService.add(`RunReplayComponent: ${message}`);\n  }\n}\n","<mat-tab-group >\n  <mat-tab label=\"Selection\">\n    <form [formGroup]=\"runFirstLookForm\" class=\"example-form\">\n\n      <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">\n        <legend>UUID</legend>\n        <div fxLayout=\"column\">\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-label>First Look Type</mat-label>\n            <mat-radio-group formControlName=\"firstLookType\" color=\"primary\" (change)=\"firstLookTypeChanged($event)\">\n              <mat-radio-button *ngFor=\"let firstLookType of firstLookTypes\" [value]=\"firstLookType\">\n                {{firstLookType}}\n              </mat-radio-button>\n            </mat-radio-group>\n            <textarea matInput hidden></textarea>\n            <mat-error>First Look Type is required.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"mat-form-field-cursor\">\n            <mat-label>Select First Look</mat-label>\n            <input matInput placeholder=\"UUID\" aria-label=\"UUID\" [matAutocomplete]=\"autoFirstLook\" formControlName=\"firstLookId\" required autocomplete=\"off\">\n            <mat-autocomplete #autoFirstLook=\"matAutocomplete\" [displayWith]=\"displayFirstLookIdFn\">\n              <mat-option *ngFor=\"let firstLook of filteredFirstLooks | async\" [value]=\"firstLook\">\n                {{getDisplayName(firstLook)}}\n              </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"firstLookIdControl.setValue('')\" [disabled]=\"firstLookIdControl.disabled\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-slide-toggle color=\"primary\" formControlName=\"overrideFirstLookIdToggle\">\n              Manual UUID Entry\n            </mat-slide-toggle>\n            <textarea matInput hidden></textarea>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>Enter UUID</mat-label>\n            <input matInput placeholder=\"UUID\" aria-label=\"UUID\" formControlName=\"firstLookIdEntered\" [pattern]=\"uuidPattern\" required autocomplete=\"off\">\n            <mat-error>Invalid UUID.</mat-error>\n          </mat-form-field>\n        </div>\n      </fieldset>\n      <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">\n        <legend>elasticsearch Source Index</legend>\n        <div fxLayout=\"column\">\n          <mat-form-field class=\"mat-form-field-cursor\">\n            <mat-label>Select Index</mat-label>\n            <input matInput placeholder=\"Index\" aria-label=\"Index\" [matAutocomplete]=\"autoIndex\" formControlName=\"indexName\" required autocomplete=\"off\">\n            <mat-autocomplete #autoIndex=\"matAutocomplete\" (optionSelected)=\"updateIndexSelection($event)\" [displayWith]=\"displayIndexNameFn\">\n              <mat-option *ngFor=\"let index of filteredIndices | async\" [value]=\"index\">\n                <span>{{index.index}}</span>\n                <br>\n                <small class=\"accent-color\">Count: {{index['docs.count']}}</small>\n              </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"indexNameControl.setValue('')\" [disabled]=\"indexNameControl.disabled\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-slide-toggle color=\"primary\" formControlName=\"overrideIndexNameToggle\">\n              Manual Index Entry\n            </mat-slide-toggle>\n            <textarea matInput hidden></textarea>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>Enter Index</mat-label>\n            <input matInput placeholder=\"Index\" aria-label=\"Index\" formControlName=\"indexNameEntered\" [pattern]=\"indexPattern\" required autocomplete=\"off\">\n            <mat-error>Invalid index name.</mat-error>\n          </mat-form-field>\n        </div>\n      </fieldset>\n      <!--  <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">-->\n      <!--    <legend>Tests</legend>-->\n\n      <!--  </fieldset>-->\n    </form>\n    <br>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-spinner *ngIf=\"isFirstLookRunning\" mode=\"indeterminate\" diameter=\"36\"></mat-spinner>\n        <button mat-raised-button color=\"primary\" (click)=\"onRunClick()\" [disabled]=\"!runFirstLookForm.valid\">Run</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onClearClick()\" [disabled]=\"!areResultsReady\">Clear</button>\n      </div>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Results\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <mat-card ngClass=\"stats-card\" [ngClass.lt-md]=\"'stats-card-narrow'\">\n        <mat-card-header>\n          <mat-card-title>{{areResultsReady ? firstLookReport.trial.name : ''}}</mat-card-title>\n          <mat-card-subtitle>{{areResultsReady ? firstLookReport.id: ''}} {{areResultsReady ? firstLookReport.is_replay ? '[REPLAY]' : '' : ''}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <div fxLayout=\"column\">\n            <mat-selection-list #firstLookList [multiple]=\"false\">\n              <mat-list-option *ngFor=\"let item of firstLookData; let i = index\">\n                <mat-icon *ngIf=\"firstLookTests[i] !== undefined\" mat-list-icon color=\"{{firstLookTests[i].valid === true ? 'primary' : 'warn'}}\" matTooltip=\"{{firstLookTests[i] !== undefined && firstLookTests[i].valid === true ? 'Passed' : 'Failed'}}\">lens</mat-icon>\n                <div mat-line>[{{item.message_type}}] {{item.sub_type}} {{item.comparison.operator}} {{item.comparison.value}}</div>\n              </mat-list-option>\n            </mat-selection-list>\n          </div>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"generateReport()\" [disabled]=\"!areResultsReady\" matTooltip=\"Generate report.\">\n            <mat-icon>download</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StatsComponent } from './stats/stats.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StatsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StatsRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatsComponent } from './stats/stats.component';\nimport { StatsRoutingModule } from '../stats/stats-routing.module';\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\nimport { FirstLookComponent } from './first-look/first-look.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [StatsComponent, FirstLookComponent],\n  imports: [\n    CommonModule,\n    StatsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class StatsModule { }\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\nimport { ElasticsearchService } from '../../dashboard/elasticsearch';\nimport { HealthStatusService } from '../../dashboard/health-status/health-status.service';\nimport {MetadataAppService} from \"../../dashboard/metadata-app/metadata-app.service\";\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit, OnDestroy {\n  private metadataAppOnlineSubscription: Subscription;\n  public metadataAppOnline = false;\n\n  private elasticsearchBusySubscription: Subscription;\n  public elasticsearchBusy = false;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.elasticsearchBusy) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private metadataAppService: MetadataAppService,\n    private elasticsearch: ElasticsearchService,\n    private healthStatusService: HealthStatusService\n  ) { }\n\n  ngOnInit(): void {\n    this.healthTimer();\n    // this.elasticsearchOnlineSubscription = this.healthStatusService.isElasticsearchOnline.subscribe(isOnline => this.elasticsearchOnline = isOnline);\n    this.metadataAppOnlineSubscription = this.healthStatusService.isMetadataAppOnline.subscribe(isOnline => this.metadataAppOnline = isOnline);\n    this.elasticsearchBusySubscription = this.elasticsearch.isElasticsearchBusy.subscribe(isBusy => this.elasticsearchBusy = isBusy);\n  }\n\n  ngOnDestroy(): void {\n    // this.elasticsearchOnlineSubscription.unsubscribe();\n    this.metadataAppOnlineSubscription.unsubscribe();\n    this.elasticsearchBusySubscription.unsubscribe();\n  }\n\n  healthTimer(): void {\n    const source = timer(0, 10000);\n    source.subscribe(val => {\n      this.updateHealth();\n    });\n  }\n\n  updateHealth(): void {\n    this.metadataAppService.getHealth()\n      .subscribe(result => {\n        if (!result) {\n          this.healthStatusService.setMetadataAppOnline(false);\n          this.healthStatusService.setMetadataAppElasticsearchOnline(false);\n        }\n        else {\n          if (result.status === 'UP') {\n            this.healthStatusService.setMetadataAppOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppOnline(false);\n          }\n          if (result.details.elasticsearch.status === 'UP') {\n            this.healthStatusService.setMetadataAppElasticsearchOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppElasticsearchOnline(false);\n          }\n          if (result.details['mqtt-client'].status === 'UP') {\n            this.healthStatusService.setMetadataAppMqttClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppMqttClientOnline(false);\n          }\n          if (result.details['vertx-pg-client'].status === 'UP') {\n            this.healthStatusService.setMetadataAppPostgresClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppPostgresClientOnline(false);\n          }\n          if (result.details['compositeDiscoveryClient()'].status === 'UP') {\n            this.healthStatusService.setMetadataAppDiscoveryClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppDiscoveryClientOnline(false);\n          }\n          if (result.details.diskSpace.status === 'UP') {\n            this.healthStatusService.setMetadataAppDiskSpaceOnline(true);\n         } else {\n            this.healthStatusService.setMetadataAppDiskSpaceOnline(false);\n          }\n        }\n      });\n  }\n}\n","<div class=\"container\">\n  <h2>Stats</h2>\n  <div fxLayout=\"row wrap\" [fxLayout.lt-md]=\"'column wrap'\" fxLayoutAlign=\"center top\"> <!--fxLayoutGap=\"2em\"-->\n\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"First Look\">done_all</mat-icon>\n          </div>\n          <mat-card-title>First Look</mat-card-title>\n          <mat-card-subtitle>Check Validity</mat-card-subtitle>\n          <mat-icon color=\"{{metadataAppOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{metadataAppOnline ? 'All systems online' : '1 or more systems offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <app-first-look></app-first-look>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n</div>\n\n"]}