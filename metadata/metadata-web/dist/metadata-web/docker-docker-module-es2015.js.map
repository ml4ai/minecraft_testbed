{"version":3,"sources":["./src/app/docker/docker-routing.module.ts","./src/app/docker/docker.module.ts","./src/app/docker/docker/docker.component.ts","./src/app/docker/docker/docker.component.html"],"names":[],"mappings":"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","file":"docker-docker-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DockerComponent } from './docker/docker.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DockerComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DockerRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DockerComponent } from './docker/docker.component';\nimport { DockerRoutingModule } from './docker-routing.module';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { ExtendedModule, FlexModule } from '@angular/flex-layout';\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\nimport {FormsModule} from \"@angular/forms\";\n\n\n\n@NgModule({\n  declarations: [DockerComponent],\n  imports: [\n    CommonModule,\n    DockerRoutingModule,\n    AngularMaterialModule,\n    DashboardModule,\n    ExtendedModule,\n    FlexModule,\n    FormsModule,\n  ]\n})\nexport class DockerModule { }\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport { map, startWith } from 'rxjs/operators';\nimport { DockerService } from '../docker.service';\nimport {Subscription, timer} from 'rxjs';\nimport { MatListOption, MatSelectionList, MatSelectionListChange } from '@angular/material/list';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AgentService } from '../agent.service';\nimport { IMqttMessage, MqttService } from 'ngx-mqtt';\n\n@Component({\n  selector: 'app-docker',\n  templateUrl: './docker.component.html',\n  styleUrls: ['./docker.component.scss']\n})\nexport class DockerComponent implements OnInit, OnDestroy {\n  private dockerOnlineSubscription: Subscription;\n\n  @ViewChild('containerList') matSelectionList: MatSelectionList;\n\n  containers: any = {};\n  statistics: any = {};\n  selectedContainer: any = null;\n  dockerOnline: boolean;\n  selectedContainerLog: string[] = [];\n  agents: string[] = [];\n  agentLog = ''; // 'b1124ca78a7a Extracting [==================================================>]  40.41MB/40.41MB';\n\n  private metadataAgentLogSubscription: Subscription;\n\n  constructor(\n    private dockerService: DockerService,\n    // private agentService: AgentService,\n    private mqttService: MqttService) {\n    this.metadataAgentLogSubscription = this.mqttService.observe('metadata/agent/log').subscribe((message: IMqttMessage) => {\n      const output = new TextDecoder('utf-8').decode(message.payload);\n      // const logMessage = JSON.parse(output);\n      // const decodedString = atob(logMessage.encoded_string);\n      console.log(output);\n      this.agentLog = output;\n    });\n  }\n\n  ngOnInit(): void {\n    this.containerStatusTimer();\n    this.agentList();\n    this.dockerOnlineSubscription = this.dockerService.isDockerOnline.subscribe(isOnline => this.dockerOnline = isOnline);\n  }\n\n  ngOnDestroy(): void {\n    this.dockerOnlineSubscription.unsubscribe();\n    this.metadataAgentLogSubscription.unsubscribe();\n  }\n\n  containerStatusTimer(): void {\n    const source = timer(0, 10000);\n    source.subscribe(val => {\n      this.ping();\n      this.containerList();\n    });\n  }\n\n  ping(): void {\n    this.dockerService.ping().subscribe(online => {\n      this.dockerOnline = online;\n    });\n  }\n\n  containerList(): void {\n    this.dockerService.containerList().subscribe(containers => {\n      // Remove any old containers that are not in new list\n      const currentContainerIds = Object.keys(this.containers);\n      currentContainerIds.forEach(id => {\n        if (containers.findIndex(c => {\n          return c.Id === id;\n        }) === -1) {\n          delete this.containers[id];\n          delete this.statistics[id];\n        }\n      });\n      // Update container list\n      containers.forEach(container => {\n        this.containers[container.Id] = container;\n        if (this.selectedContainer && this.selectedContainer.Id === container.Id) {\n          this.selectedContainer = container;\n        }\n        // Stats\n        this.containerStats(container.Id);\n      });\n    });\n  }\n\n  agentList(): void {\n    this.dockerService.agentList().subscribe(agents => {\n      console.log('agents: ' + agents);\n      this.agents = agents;\n    });\n  }\n\n  containerLog(Id: string) {\n    this.dockerService.containerLog(Id).subscribe(log => {\n      this.selectedContainerLog = log;\n    });\n  }\n\n  onSelectionChange($event) {\n    this.selectedContainer = $event.option?.value;\n    this.containerLog(this.selectedContainer.Id);\n  }\n\n  isSelected(Id: string) {\n    if (this.selectedContainer) {\n      return (this.selectedContainer.Id === Id);\n    }\n  }\n\n  compare(c1: {Id: string}, c2: {Id: string}) {\n    return c1 && c2 && c1.Id === c2.Id;\n  }\n\n  startContainer(id: string) {\n    this.agentLog = '';\n    this.dockerService.startContainer(id).subscribe(container => {\n      this.selectedContainer = container;\n      this.containers[id] = container;\n    });\n  }\n\n  stopContainer(id: string) {\n    this.agentLog = '';\n    this.dockerService.stopContainer(id).subscribe(container => {\n      this.selectedContainer = container;\n      this.containers[id] = container;\n    });\n  }\n\n  containerLogDownload(Id: string) {\n    this.dockerService.containerLogDownload(Id).subscribe(response => {\n      const dataType = response.type;\n      const binaryData = [];\n      binaryData.push(response);\n      const downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n      downloadLink.setAttribute('download', `${Id}.txt`);\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n    });\n  }\n\n  containerLogsDownload() {\n    this.dockerService.containerLogsDownload().subscribe(response => {\n      const dataType = response.type;\n      const binaryData = [];\n      binaryData.push(response);\n      const downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n      downloadLink.setAttribute('download', 'dockerlogs.zip');\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n    });\n  }\n\n  containerStats(Id: string) {\n    this.dockerService.containerStats(Id).subscribe(stats => {\n      this.statistics[Id] = stats[0];\n    });\n  }\n\n  calcCpuPercent(Id: string) {\n    // cpu_delta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage\n    // system_cpu_delta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage\n    // number_cpus = length(cpu_stats.cpu_usage.percpu_usage) or cpu_stats.online_cpus\n    // (cpu_delta / system_cpu_delta) * number_cpus * 100.0\n    const stats = this.statistics[Id];\n    if (stats) {\n      const cpu_delta = stats.cpu_stats.cpu_usage.total_usage - stats.precpu_stats.cpu_usage.total_usage;\n      const system_cpu_delta = (stats.cpu_stats.system_cpu_usage ? stats.cpu_stats.system_cpu_usage : 0) - (stats.precpu_stats.system_cpu_usage ? stats.precpu_stats.system_cpu_usage : 0);\n      const number_cpus = stats.cpu_stats.online_cpus ? stats.cpu_stats.online_cpus : (stats.cpu_stats.cpu_usage.percpu_usage ? stats.cpu_stats.cpu_usage.percpu_usage.length : 1);\n      return ((cpu_delta / system_cpu_delta) * (number_cpus * 100.0)).toFixed(2);\n    }\n  }\n\n  calcMemPercent(Id: string) {\n    // used_memory = memory_stats.usage - memory_stats.stats.cache\n    // available_memory = memory_stats.limit\n    // (used_memory / available_memory) * 100.0\n    const stats = this.statistics[Id];\n    if (stats) {\n      const used_memory = stats.memory_stats.usage ? stats.memory_stats.usage : 0 - stats.memory_stats.stats ? (stats.memory_stats.stats.cache ? stats.memory_stats.stats.cache : 0) : 0;\n      const available_memory = stats.memory_stats.limit;\n      return ((used_memory / available_memory) * 100.0).toFixed(2);\n    }\n  }\n\n  agentUp(agent: string) {\n    this.agentLog = `Calling up on agent: ${agent}`;\n    this.dockerService.agentUp(agent).subscribe(output => {\n      // console.log(output);\n    });\n  }\n\n  agentDown(agent: string) {\n    this.agentLog = `Calling down on agent: ${agent}`;\n    this.dockerService.agentDown(agent).subscribe(output => {\n      // console.log(output);\n    });\n  }\n\n  // agentUp(agent: string) {\n  //   this.agentService.agentUp(agent).subscribe(output => {\n  //       console.log(output);\n  //       this.agentLog = output;\n  //     });\n  //   // this.dockerService.agentUp(agent).subscribe(output => {\n  //   //   console.log(output);\n  //   //   this.agentLog = output;\n  //   // });\n  // }\n}\n","<div class=\"container\">\n  <h2>Docker</h2>\n  <div fxLayout=\"row wrap\" [fxLayout.lt-md]=\"'column wrap'\" fxLayoutAlign=\"center top\"> <!--fxLayoutGap=\"2em\"-->\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Containers\">web_stories</mat-icon>\n          </div>\n          <mat-card-title>Containers</mat-card-title>\n          <mat-card-subtitle>Status</mat-card-subtitle>\n          <mat-icon color=\"{{dockerOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{dockerOnline ? 'Docker online' : 'Docker offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-selection-list #containerList [multiple]=\"false\" (selectionChange)=\"onSelectionChange($event)\" [compareWith]=\"compare\">\n            <mat-list-option *ngFor=\"let item of containers | keyvalue\" [value]=\"item.value\" [selected]=\"isSelected(item.value.Id)\">\n              <mat-icon mat-list-icon color=\"{{item.value.State ==='running'  ? 'primary' : 'warn'}}\" matTooltip=\"{{item.value.Status}}\">lens</mat-icon>\n              <div mat-line>{{item.value.Names[0].substring(1)}}</div>\n              <div mat-line>CPU: {{item.value.State === 'running' ? calcCpuPercent(item.value.Id) + '%' : '0'}} MEM: {{item.value.State === 'running' ? calcMemPercent(item.value.Id) + '%' : '0'}}</div>\n            </mat-list-option>\n          </mat-selection-list>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogsDownload()\" [disabled]=\"!dockerOnline\" matTooltip=\"Download all container logs\">\n            <mat-icon>download</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Container Details\">notes</mat-icon>\n          </div>\n          <mat-card-title>Container</mat-card-title>\n          <mat-card-subtitle>{{selectedContainer === null ? 'Details' : selectedContainer.Names[0].substring(1)}}</mat-card-subtitle>\n          <mat-icon color=\"{{selectedContainer === null || selectedContainer.State === 'running' ? 'primary' : 'warn'}}\" matTooltip=\"{{selectedContainer === null ? '' : selectedContainer.Status}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <p *ngIf=\"selectedContainer !== null\" class=\"lighter\"><span class=\"bold\">Id: </span>{{selectedContainer.Id}}</p>\n          <p *ngIf=\"selectedContainer !== null\" class=\"lighter\"><span class=\"bold\">Image: </span>{{selectedContainer.Image}}</p>\n          <div class=\"log-content\" *ngIf=\"selectedContainer !== null\">\n            <div class=\"log-list\">\n              <div *ngFor='let line of selectedContainerLog'> {{line}} </div>\n            </div>\n          </div>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Refresh last 100 lines of container log.\" (click)=\"containerLog(selectedContainer.Id)\" [disabled]=\"selectedContainer === null\" matTooltip=\"Refresh last 100 line of log\">\n            <mat-icon>refresh</mat-icon>\n          </button>\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogDownload(selectedContainer.Id)\" [disabled]=\"selectedContainer === null\" matTooltip=\"Download container log\">\n            <mat-icon>download</mat-icon>\n          </button>\n          <button mat-raised-button color=\"primary\" [disabled]=\"selectedContainer === null || selectedContainer.State !== 'running'\" (click)=\"stopContainer(selectedContainer.Id)\" matTooltip=\"Stop container\">Stop</button>\n          <button mat-raised-button color=\"primary\" [disabled]=\"selectedContainer === null || selectedContainer.State !== 'exited'\" (click)=\"startContainer(selectedContainer.Id)\" matTooltip=\"Start container\">Start</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"Agents\">group</mat-icon>\n          </div>\n          <mat-card-title>Agents</mat-card-title>\n          <mat-card-subtitle>Status</mat-card-subtitle>\n          <mat-icon color=\"{{dockerOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{dockerOnline ? 'Docker online' : 'Docker offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-action-list #agentList>\n            <mat-list-item *ngFor=\"let item of agents\">\n              <div mat-line>{{item}}</div>\n              <button mat-mini-fab color=\"primary\" (click)=\"agentDown(item)\" matTooltip=\"Down {{item}}\">\n                <mat-icon aria-label=\"Down\">stop</mat-icon>\n              </button>\n              <button mat-mini-fab color=\"primary\" (click)=\"agentUp(item)\" matTooltip=\"Up {{item}}\">\n                <mat-icon aria-label=\"Up\">play_arrow</mat-icon>\n              </button>\n            </mat-list-item>\n          </mat-action-list>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <div *ngIf=\"agentLog != ''\" class=\"agent-output caption\">\n            {{agentLog}}\n          </div>\n<!--          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"containerLogsDownload()\" [disabled]=\"!dockerOnline\" matTooltip=\"Download all container logs\">-->\n<!--            <mat-icon>download</mat-icon>-->\n<!--          </button>-->\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}