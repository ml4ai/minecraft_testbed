{"version":3,"sources":["./src/app/experiment/experiment.service.ts","./src/app/trial/create-trial/create-trial.component.ts","./src/app/trial/create-trial/create-trial.component.html","./src/app/trial/delete-trial/delete-trial.component.ts","./src/app/trial/delete-trial/delete-trial.component.html","./src/app/trial/json-trial/json-trial.component.ts","./src/app/trial/json-trial/json-trial.component.html","./src/app/trial/trial-routing.module.ts","./src/app/trial/trial.module.ts","./src/app/trial/trial.service.ts","./src/app/trial/trials/trials.component.ts","./src/app/trial/trials/trials.component.html","./src/app/trial/update-trial/update-trial.component.ts","./src/app/trial/update-trial/update-trial.component.html"],"names":[],"mappings":"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","file":"trial-trial-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Experiment } from './experiment';\r\nimport { ExperimentMessage } from './experiment-message';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { environment } from '../../environments/environment';\r\nimport { MqttService } from 'ngx-mqtt';\r\nimport { Trial } from '../trial/trial';\r\nimport { TrialMessage } from '../trial/trial-message';\r\n// import moment from 'moment';\r\n\r\nconst moment = require('moment');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExperimentService {\r\n  private experimentsUrl = environment.metadataAppUrl + '/experiments';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private loggingService: LoggingService,\r\n    private mqttService: MqttService\r\n  ) { }\r\n\r\n  /** GET experiments from the server */\r\n  readExperiments(): Observable<Experiment[]> {\r\n    return this.http.get<Experiment[]>(this.experimentsUrl)\r\n      .pipe(\r\n        tap(_ => this.log('Read experiments')),\r\n        catchError(this.handleError<Experiment[]>('readExperiments', []))\r\n      );\r\n  }\r\n\r\n  /** GET experiments by id. Return `undefined` when id not found */\r\n  readExperimentNo404<Data>(id: number): Observable<Experiment> {\r\n    const url = `${this.experimentsUrl}/?id=${id}`;\r\n    return this.http.get<Experiment[]>(url)\r\n      .pipe(\r\n        map(experiments => experiments[0]), // returns a {0|1} element array\r\n        tap(h => {\r\n          const outcome = h ? `Read` : `Did not find`;\r\n          this.log(`${outcome} experiment id=${id}`);\r\n        }),\r\n        catchError(this.handleError<Experiment>(`getExperiments id=${id}`))\r\n      );\r\n  }\r\n\r\n  /** GET experiments by id. Will 404 if id not found */\r\n  readExperiment(id: number): Observable<Experiment> {\r\n    const url = `${this.experimentsUrl}/${id}`;\r\n    return this.http.get<Experiment>(url).pipe(\r\n      tap(_ => this.log(`Read experiment id=${id}`)),\r\n      catchError(this.handleError<Experiment>(`getExperiments id=${id}`))\r\n    );\r\n  }\r\n\r\n  /** GET experiments by uuid. Will 404 if id not found */\r\n  readExperimentUUID(experimentId: string): Observable<Experiment> {\r\n    const url = `${this.experimentsUrl}/uuid/${experimentId}`;\r\n    return this.http.get<Experiment>(url).pipe(\r\n      tap(_ => this.log(`Read experiment experimentId=${experimentId}`)),\r\n      catchError(this.handleError<Experiment>(`getExperiments experimentId=${experimentId}`))\r\n    );\r\n  }\r\n\r\n  /* GET experiments whose name contains export term */\r\n  searchExperiments(term: string): Observable<Experiment[]> {\r\n    if (!term.trim()) {\r\n      // if not export term, return empty experiments array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Experiment[]>(`${this.experimentsUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n        this.log(`Found experiments matching \"${term}\"`) :\r\n        this.log(`No experiments matching \"${term}\"`)),\r\n      catchError(this.handleError<Experiment[]>('searchExperiments', []))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new experiments to the server */\r\n  createExperiment(experiment: Experiment): Observable<Experiment> {\r\n    return this.http.post<Experiment>(this.experimentsUrl, experiment, this.httpOptions).pipe(\r\n      tap((newExperiment: Experiment) => this.log(`Added experiment with id=${newExperiment.id}`)),\r\n      catchError(this.handleError<Experiment>('createExperiment'))\r\n    );\r\n  }\r\n\r\n  createExperimentMessage(experimentMessage: ExperimentMessage): Observable<void> {\r\n    return this.mqttService.publish('experiment', JSON.stringify(experimentMessage), { qos: 1 }).pipe(\r\n      tap(_ => this.log(`Sent message over bus to create experiment.`)),\r\n      catchError(this.handleError<void>('createExperimentMessage'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the experiments from the server */\r\n  deleteExperiment(experiment: Experiment | number): Observable<Experiment> {\r\n    const id = typeof experiment === 'number' ? experiment : experiment.id;\r\n    const url = `${this.experimentsUrl}/${id}`;\r\n\r\n    return this.http.delete<Experiment>(url, this.httpOptions).pipe(\r\n      tap(_ => this.log(`Deleted experiment id=${id}`)),\r\n      catchError(this.handleError<Experiment>('deleteExperiment'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the experiments on the server */\r\n  updateExperiment(experiment: Experiment): Observable<any> {\r\n    const id = experiment.id;\r\n    const url = `${this.experimentsUrl}/${id}`;\r\n\r\n    return this.http.put(url, experiment, this.httpOptions).pipe(\r\n      tap(_ => this.log(`Updated experiment id=${experiment.id}`)),\r\n      catchError(this.handleError<any>('updateExperiment'))\r\n    );\r\n  }\r\n\r\n  public generateExperimentMessage(experiment: Experiment, messageType: string, sub_type: string, source: string, version: string): ExperimentMessage {\r\n    const experimentMessage = {\r\n      header: {\r\n        timestamp: experiment.date,\r\n        message_type: messageType,\r\n        version: environment.testbedVersion\r\n      },\r\n      msg: {\r\n        sub_type,\r\n        source,\r\n        experiment_id: experiment.experiment_id,\r\n        timestamp: moment().toDate().toISOString(),\r\n        version\r\n      },\r\n      data: {\r\n        name: experiment.name,\r\n        date: experiment.date,\r\n        author: experiment.author,\r\n        mission: experiment.mission\r\n      }\r\n    };\r\n    return experimentMessage;\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log an ExperimentService message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`ExperimentService: ${message}`);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Trial } from '../trial';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Experiment } from '../../experiment/Experiment';\r\nimport { ExperimentService } from '../../experiment/experiment.service';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { LoggingService } from '../../logging/logging.service';\r\nimport { JsonTrialComponent } from '../json-trial/json-trial.component';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-create-trial',\r\n  templateUrl: './create-trial.component.html',\r\n  styleUrls: ['./create-trial.component.scss']\r\n})\r\nexport class CreateTrialComponent implements OnInit {\r\n  experiments: Experiment[] = [];\r\n  createTrialForm = this.formBuilder.group({\r\n    trial_id: ['', Validators.required],\r\n    name: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    experimenter: ['', Validators.required],\r\n    subjects: ['', Validators.required],\r\n    trial_number: ['', Validators.required],\r\n    group_number: ['', Validators.required],\r\n    study_number: ['', Validators.required],\r\n    condition: ['', Validators.required],\r\n    notes: [''],\r\n    testbed_version: [environment.testbedVersion, Validators.required],\r\n    experiment: ['', Validators.required],\r\n    useMessageBus: [false]\r\n  });\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<CreateTrialComponent>,\r\n    private experimentService: ExperimentService,\r\n    public jsonDialog: MatDialog,\r\n    private loggingService: LoggingService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Trial) {\r\n  }\r\n\r\n  readExperiments(): void {\r\n    this.experimentService.readExperiments()\r\n      .subscribe(experiments => {\r\n        this.experiments = experiments;\r\n      });\r\n  }\r\n\r\n  openJsonTrialDialog(): void {\r\n    const dialogResult = this.createTrialForm.value;\r\n\r\n    const subjectsText = this.createTrialForm.get('subjects').value;\r\n    if (subjectsText !== '') {\r\n      dialogResult.subjects = subjectsText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.subjects = [];\r\n    }\r\n\r\n    const notesText = this.createTrialForm.get('notes').value;\r\n    if (notesText !== '') {\r\n      dialogResult.notes = notesText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.notes = [];\r\n    }\r\n\r\n    delete dialogResult.useMessageBus;\r\n\r\n    const jsonDialogRef = this.jsonDialog.open(JsonTrialComponent, {\r\n      // width: '250px',\r\n      data: JSON.stringify(dialogResult, null, 2),\r\n      panelClass: 'full-width-2-dialog'\r\n    });\r\n\r\n    jsonDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        try {\r\n          const trial = JSON.parse(result.json);\r\n          // let experiment = {\r\n          //   name: trial.experiment\r\n          // }\r\n          const experiment = this.experiments.find(e => e.name === trial.experiment);\r\n          this.createTrialForm.patchValue({\r\n            trial_id: trial.trial_id,\r\n            name: trial.name,\r\n            date: trial.date,\r\n            experimenter: trial.experimenter,\r\n            subjects: trial.subjects.length > 0 ? trial.subjects.join('\\r\\n') : trial.subjects,\r\n            trial_number: trial.trial_number,\r\n            group_number: trial.group_number,\r\n            study_number: trial.study_number,\r\n            condition: trial.condition,\r\n            notes: trial.notes.length > 0 ? trial.notes.join('\\r\\n') : trial.notes,\r\n            testbed_version: trial.testbed_version,\r\n            experiment\r\n          });\r\n        } catch (e) {\r\n          this.log(e);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateClick(): void {\r\n    const dialogResult = this.createTrialForm.value;\r\n\r\n    const subjectsText = this.createTrialForm.get('subjects').value;\r\n    if (subjectsText !== '') {\r\n      dialogResult.subjects = subjectsText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.subjects = [];\r\n    }\r\n\r\n    const notesText = this.createTrialForm.get('notes').value;\r\n    if (notesText !== '') {\r\n      dialogResult.notes = notesText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.notes = [];\r\n    }\r\n\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.createTrialForm.patchValue({\r\n      trial_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  toggleUseMessageBusChange(event: MatSlideToggleChange) {\r\n    // if (event.checked) {\r\n    //   this.createTrialForm.controls['trial_id'].reset('', {\r\n    //     onlySelf: true\r\n    //   });\r\n    // } else {\r\n    //   this.createTrialForm.controls['trial_id'].reset('', {\r\n    //     onlySelf: true\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.readExperiments();\r\n  }\r\n\r\n  compareFnExperiments(e1: Experiment, e2: Experiment): boolean {\r\n    return e1 && e2 ? e1.name === e2.name : e1 === e2;\r\n  }\r\n\r\n  /** Log a TrialService message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`CreateTrialComponent: ${message}`);\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Create</h1>\r\n<div mat-dialog-content [formGroup]=\"createTrialForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Trial</legend>\r\n    <mat-form-field floatLabel=\"always\" appearance=\"none\">\r\n      <div class=\"header-row\">\r\n        <mat-slide-toggle color=\"primary\" (change)=\"toggleUseMessageBusChange($event)\" formControlName=\"useMessageBus\">Use Message Bus</mat-slide-toggle>\r\n        <textarea matInput hidden></textarea>\r\n        <button mat-fab color=\"primary\" (click)=\"openJsonTrialDialog()\" matTooltip=\"Use JSON to populate form.\">\r\n          <mat-icon aria-label=\"Create\">text_snippet</mat-icon>\r\n        </button>\r\n      </div>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial UUID</mat-label>\r\n      <input matInput formControlName=\"trial_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\" >\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Name</mat-label>\r\n      <input matInput formControlName=\"name\" placeholder=\"Name\" required autocomplete=\"off\">\r\n      <mat-error>Name is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experimenter</mat-label>\r\n      <input matInput formControlName=\"experimenter\" placeholder=\"Experimenter\" required autocomplete=\"off\">\r\n      <mat-error>Experimenter is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Subjects</mat-label>\r\n      <textarea matInput formControlName=\"subjects\" placeholder=\"Subjects...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Number</mat-label>\r\n      <input matInput formControlName=\"trial_number\" placeholder=\"Trial Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Group Number</mat-label>\r\n      <input matInput formControlName=\"group_number\" placeholder=\"Trial Group Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Group Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Study Number</mat-label>\r\n      <input matInput formControlName=\"study_number\" placeholder=\"Trial Study Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Study Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Condition</mat-label>\r\n      <input matInput formControlName=\"condition\" placeholder=\"Trial Condition\" required autocomplete=\"off\">\r\n      <mat-error>Trial Condition is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Notes</mat-label>\r\n      <textarea matInput formControlName=\"notes\" placeholder=\"Notes...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Testbed Version</mat-label>\r\n      <input matInput formControlName=\"testbed_version\" placeholder=\"Testbed Version\" required autocomplete=\"off\">\r\n      <mat-error>Testbed version is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experiment</mat-label>\r\n      <mat-select [compareWith]=\"compareFnExperiments\" formControlName=\"experiment\" placeholder=\"Experiment\" required>\r\n        <mat-option *ngFor=\"let experiment of experiments\" [value]=\"experiment\">\r\n          {{experiment.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Experiment is required.</mat-error>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onCreateClick()\" [disabled]=\"!createTrialForm.valid\">Create</button>\r\n</div>\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { Experiment } from '../../experiment/experiment';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ExperimentService } from '../../experiment/experiment.service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Trial } from '../trial';\r\n\r\n@Component({\r\n  selector: 'app-delete-trial',\r\n  templateUrl: './delete-trial.component.html',\r\n  styleUrls: ['./delete-trial.component.scss']\r\n})\r\nexport class DeleteTrialComponent implements OnInit {\r\n  experiments: Experiment[];\r\n  deleteTrialForm = this.formBuilder.group({\r\n    id: ['', Validators.required],\r\n    trial_id: ['', Validators.required],\r\n    name: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    experimenter: ['', Validators.required],\r\n    subjects: ['', Validators.required],\r\n    trial_number: ['', Validators.required],\r\n    group_number: ['', Validators.required],\r\n    study_number: ['', Validators.required],\r\n    condition: ['', Validators.required],\r\n    notes: [''],\r\n    testbed_version: ['', Validators.required],\r\n    experiment: ['', Validators.required]\r\n  });\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<DeleteTrialComponent>,\r\n    private experimentService: ExperimentService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Trial) {\r\n  }\r\n\r\n  readExperiments(): void {\r\n    this.experimentService.readExperiments()\r\n      .subscribe(experiments => {\r\n        this.experiments = experiments;\r\n      });\r\n  }\r\n\r\n  onDeleteClick(): void {\r\n    this.dialogRef.close(this.deleteTrialForm.getRawValue());\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.deleteTrialForm.patchValue({\r\n      trial_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.readExperiments();\r\n\r\n    this.deleteTrialForm.setValue({\r\n      id: this.data.id,\r\n      trial_id: this.data.trial_id,\r\n      name: this.data.name,\r\n      date: this.data.date,\r\n      experimenter: this.data.experimenter,\r\n      subjects: this.data.subjects.length > 0 ? this.data.subjects.join('\\r\\n') : this.data.subjects,\r\n      trial_number: this.data.trial_number,\r\n      group_number: this.data.group_number,\r\n      study_number: this.data.study_number,\r\n      condition: this.data.condition,\r\n      notes: this.data.notes.length > 0 ? this.data.notes.join('\\r\\n') : this.data.notes,\r\n      testbed_version: this.data.testbed_version,\r\n      experiment: this.data.experiment\r\n    });\r\n    this.deleteTrialForm.disable();\r\n  }\r\n\r\n  compareFnExperiments(e1: Experiment, e2: Experiment): boolean {\r\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Delete</h1>\r\n<div mat-dialog-content [formGroup]=\"deleteTrialForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Trial: {{data.id}}</legend>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial UUID</mat-label>\r\n      <input matInput formControlName=\"trial_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\">\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\" [disabled]=\"deleteTrialForm.disabled\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Name</mat-label>\r\n      <input matInput formControlName=\"name\" placeholder=\"Name\" required autocomplete=\"off\">\r\n      <mat-error>Name is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experimenter</mat-label>\r\n      <input matInput formControlName=\"experimenter\" placeholder=\"Experimenter\" required autocomplete=\"off\">\r\n      <mat-error>Experimenter is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Subjects</mat-label>\r\n      <textarea matInput formControlName=\"subjects\" placeholder=\"Subjects...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Number</mat-label>\r\n      <input matInput formControlName=\"trial_number\" placeholder=\"Trial Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Group Number</mat-label>\r\n      <input matInput formControlName=\"group_number\" placeholder=\"Trial Group Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Group Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Study Number</mat-label>\r\n      <input matInput formControlName=\"study_number\" placeholder=\"Trial Study Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Study Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Condition</mat-label>\r\n      <input matInput formControlName=\"condition\" placeholder=\"Trial Condition\" required autocomplete=\"off\">\r\n      <mat-error>Trial Condition is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Notes</mat-label>\r\n      <textarea matInput formControlName=\"notes\" placeholder=\"Notes...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Testbed Version</mat-label>\r\n      <input matInput formControlName=\"testbed_version\" placeholder=\"Testbed Version\" required autocomplete=\"off\">\r\n      <mat-error>Testbed version is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experiment</mat-label>\r\n      <mat-select [compareWith]=\"compareFnExperiments\" formControlName=\"experiment\" placeholder=\"Experiment\" required>\r\n        <mat-option *ngFor=\"let experiment of experiments\" [value]=\"experiment\">\r\n          {{experiment.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Experiment is required.</mat-error>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onDeleteClick()\">Delete</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {FormBuilder, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-json-trial',\r\n  templateUrl: './json-trial.component.html',\r\n  styleUrls: ['./json-trial.component.scss']\r\n})\r\nexport class JsonTrialComponent implements OnInit {\r\n  jsonTrialForm = this.formBuilder.group({\r\n    json: ['']\r\n  });\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<JsonTrialComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.jsonTrialForm.setValue({\r\n      json: this.data,\r\n    });\r\n  }\r\n\r\n  onParseClick(): void {\r\n    const dialogResult = this.jsonTrialForm.value;\r\n\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Parse</h1>\r\n<div mat-dialog-content [formGroup]=\"jsonTrialForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>JSON Trial</legend>\r\n    <mat-form-field color=\"accent\" appearance=\"fill\">\r\n      <mat-label>JSON</mat-label>\r\n      <textarea matInput\r\n                cdkTextareaAutosize\r\n                #autosize=\"cdkTextareaAutosize\"\r\n                cdkAutosizeMinRows=\"20\"\r\n                cdkAutosizeMaxRows=\"20\" md-detect-hidden formControlName=\"json\" placeholder=\"{ }\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onParseClick()\" [disabled]=\"!jsonTrialForm.valid\">Parse</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TrialsComponent } from './trials/trials.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TrialsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TrialRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TrialRoutingModule } from './trial-routing.module';\r\nimport { TrialsComponent } from './trials/trials.component';\r\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateTrialComponent } from './create-trial/create-trial.component';\r\nimport { UpdateTrialComponent } from './update-trial/update-trial.component';\r\nimport { DeleteTrialComponent } from './delete-trial/delete-trial.component';\r\nimport { JsonTrialComponent } from './json-trial/json-trial.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TrialsComponent, CreateTrialComponent, UpdateTrialComponent, DeleteTrialComponent, JsonTrialComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TrialRoutingModule,\r\n    AngularMaterialModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class TrialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { LoggingService } from '../logging/logging.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Trial } from '../trial/trial';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { TrialMessage } from '../trial/trial-message';\r\nimport { TrialExportMessage } from '../trial/trial-export-message';\r\nimport { MqttService } from 'ngx-mqtt';\r\n// import moment from 'moment';\r\n\r\nconst moment = require('moment');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrialService {\r\n  private trialsUrl = environment.metadataAppUrl + '/trials';  // URL to web api\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private loggingService: LoggingService,\r\n    private mqttService: MqttService\r\n  ) { }\r\n\r\n  /** GET trials from the server */\r\n  readTrials(): Observable<Trial[]> {\r\n    return this.http.get<Trial[]>(this.trialsUrl)\r\n      .pipe(\r\n        tap(_ => this.log('Read trials')),\r\n        catchError(this.handleError<Trial[]>('readTrials', []))\r\n      );\r\n  }\r\n\r\n  /** GET trials by id. Return `undefined` when id not found */\r\n  readTrialNo404<Data>(id: number): Observable<Trial> {\r\n    const url = `${this.trialsUrl}/?id=${id}`;\r\n    return this.http.get<Trial[]>(url)\r\n      .pipe(\r\n        map(trials => trials[0]), // returns a {0|1} element array\r\n        tap(h => {\r\n          const outcome = h ? `Read` : `Did not find`;\r\n          this.log(`${outcome} trial id=${id}`);\r\n        }),\r\n        catchError(this.handleError<Trial>(`getTrials id=${id}`))\r\n      );\r\n  }\r\n\r\n  /** GET trials by uuid. Return `undefined` when id not found */\r\n  readTrialUUID(uuid: string): Observable<Trial> {\r\n    const url = `${this.trialsUrl}/uuid/${uuid}`;\r\n    return this.http.get<Trial>(url).pipe(\r\n      tap(_ => this.log(`Read trial id=${uuid}`)),\r\n      catchError(this.handleError<Trial>(`getTrials uuid=${uuid}`))\r\n    );\r\n  }\r\n\r\n  /** GET trials by id. Will 404 if id not found */\r\n  readTrial(id: number): Observable<Trial> {\r\n    const url = `${this.trialsUrl}/${id}`;\r\n    return this.http.get<Trial>(url).pipe(\r\n      tap(_ => this.log(`Read trial id=${id}`)),\r\n      catchError(this.handleError<Trial>(`getTrials id=${id}`))\r\n    );\r\n  }\r\n\r\n  /* GET trials whose name contains export term */\r\n  searchTrials(term: string): Observable<Trial[]> {\r\n    if (!term.trim()) {\r\n      // if not export term, return empty trials array.\r\n      return of([]);\r\n    }\r\n    return this.http.get<Trial[]>(`${this.trialsUrl}/?name=${term}`).pipe(\r\n      tap(x => x.length ?\r\n        this.log(`Found trials matching \"${term}\"`) :\r\n        this.log(`No trials matching \"${term}\"`)),\r\n      catchError(this.handleError<Trial[]>('searchTrials', []))\r\n    );\r\n  }\r\n\r\n  /* GET the existence of the replay in elasticsearch */\r\n  getExistReplay(uuid: string, index: string): Observable<any> {\r\n    const url = `${this.trialsUrl}/${uuid}/exist?index=${index}`;\r\n    return this.http.get<boolean>(url).pipe(\r\n      tap(exist => this.log(`Trial ${uuid} ${exist ? 'exists' : 'does not exist'} in elasticsearch index ${index}`)),\r\n      catchError(this.handleError<boolean>(`Trial ${uuid} exist in elasticsearch index ${index}`))\r\n    );\r\n  }\r\n\r\n  //////// Save methods //////////\r\n\r\n  /** POST: add a new trials to the server */\r\n  createTrial(trial: Trial): Observable<Trial> {\r\n    return this.http.post<Trial>(this.trialsUrl, trial, this.httpOptions).pipe(\r\n      tap((newTrial: Trial) => this.log(`added trial with id=${newTrial.id}`)),\r\n      catchError(this.handleError<Trial>('createTrial'))\r\n    );\r\n  }\r\n\r\n  createTrialMessage(trialMessage: TrialMessage): Observable<void> {\r\n    return this.mqttService.publish('trial', JSON.stringify(trialMessage), { qos: 1 }).pipe(\r\n      tap(_ => this.log(`Sent message over bus to create trial.`)),\r\n      catchError(this.handleError<void>('createTrialMessage'))\r\n    );\r\n  }\r\n\r\n  /** DELETE: delete the trials from the server */\r\n  deleteTrial(trial: Trial | number): Observable<Trial> {\r\n    const id = typeof trial === 'number' ? trial : trial.id;\r\n    const url = `${this.trialsUrl}/${id}`;\r\n\r\n    return this.http.delete<Trial>(url, this.httpOptions).pipe(\r\n      tap(_ => this.log(`Deleted trial id=${id}`)),\r\n      catchError(this.handleError<Trial>('deleteTrial'))\r\n    );\r\n  }\r\n\r\n  /** PUT: update the trials on the server */\r\n  updateTrial(trial: Trial): Observable<any> {\r\n    const id = trial.id;\r\n    const url = `${this.trialsUrl}/${id}`;\r\n\r\n    return this.http.put(url, trial, this.httpOptions).pipe(\r\n      tap(_ => this.log(`Updated trial id=${trial.id}`)),\r\n      catchError(this.handleError<any>('updateTrial'))\r\n    );\r\n  }\r\n\r\n  public generateTrialMessage(trial: Trial, sub_type: string, source: string, version: string, replay_id: string, replay_parent_id: string, replay_parent_type: string): TrialMessage {\r\n    const trialMessage = {\r\n      header: {\r\n        timestamp: trial.date,\r\n        message_type: 'trial',\r\n        version: environment.testbedVersion\r\n      },\r\n      msg: {\r\n        sub_type,\r\n        source,\r\n        experiment_id: trial.experiment.experiment_id,\r\n        trial_id: trial.trial_id,\r\n        timestamp: moment().toDate().toISOString(),\r\n        version,\r\n        replay_id,\r\n        replay_parent_id,\r\n        replay_parent_type\r\n      },\r\n      data: {\r\n        name: trial.name,\r\n        date: trial.date,\r\n        experimenter: trial.experimenter,\r\n        subjects: trial.subjects,\r\n        trial_number: trial.trial_number,\r\n        group_number: trial.group_number,\r\n        study_number: trial.study_number,\r\n        condition: trial.condition,\r\n        notes: trial.notes,\r\n        testbed_version: trial.testbed_version,\r\n        experiment_name: trial.experiment.name,\r\n        experiment_date: trial.experiment.date,\r\n        experiment_author: trial.experiment.author,\r\n        experiment_mission: trial.experiment.mission\r\n      }\r\n    };\r\n    if (replay_id === null) {\r\n      delete trialMessage.msg.replay_id;\r\n    }\r\n    if (replay_parent_id === null) {\r\n      delete trialMessage.msg.replay_parent_id;\r\n    }\r\n    if (replay_parent_type === null) {\r\n      delete trialMessage.msg.replay_parent_type;\r\n    }\r\n    return trialMessage;\r\n  }\r\n\r\n  public generateExportMessage(trial: Trial, index: string, sub_type: string, source: string, version: string, replay_id: string, replay_parent_id: string, replay_parent_type: string): TrialExportMessage {\r\n    if (trial === null) {\r\n      return null;\r\n    }\r\n    const trialExportMessage = {\r\n      header: {\r\n        timestamp: moment().toDate().toISOString(),\r\n        message_type: 'export',\r\n        version: index\r\n      },\r\n      msg: {\r\n        sub_type,\r\n        source,\r\n        experiment_id: trial.experiment.experiment_id,\r\n        trial_id: trial.trial_id,\r\n        timestamp: moment().toDate().toISOString(),\r\n        version,\r\n        replay_id,\r\n        replay_parent_id,\r\n        replay_parent_type\r\n      },\r\n      data: {\r\n        index,\r\n        metadata: {\r\n          trial: {\r\n            name: trial.name,\r\n            date: trial.date,\r\n            experimenter: trial.experimenter,\r\n            subjects: trial.subjects,\r\n            trial_number: trial.trial_number,\r\n            group_number: trial.group_number,\r\n            study_number: trial.study_number,\r\n            condition: trial.condition,\r\n            notes: trial.notes,\r\n            testbed_version: trial.testbed_version,\r\n            experiment_name: trial.experiment.name,\r\n            experiment_date: trial.experiment.date,\r\n            experiment_author: trial.experiment.author,\r\n            experiment_mission: trial.experiment.mission\r\n          }\r\n        }\r\n      }\r\n    };\r\n    if (replay_id === null) {\r\n      delete trialExportMessage.msg.replay_id;\r\n    }\r\n    if (replay_parent_id === null) {\r\n      delete trialExportMessage.msg.replay_parent_id;\r\n    }\r\n    if (replay_parent_type === null) {\r\n      delete trialExportMessage.msg.replay_parent_type;\r\n    }\r\n    return trialExportMessage;\r\n  }\r\n\r\n  public sendExportMessage(trialExportMessage: TrialExportMessage) {\r\n    if (trialExportMessage !== null) {\r\n      return this.mqttService.publish('metadata/trial/export', JSON.stringify(trialExportMessage), {qos: 1}).pipe(\r\n        tap(_ => {\r\n          this.log(`Exported trial using message bus.`);\r\n        }),\r\n        catchError(this.handleError<void>('trialExportMessage'))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  /** Log a TrialService message with the MessageService */\r\n  private log(message: string) {\r\n    this.loggingService.add(`TrialService: ${message}`);\r\n  }\r\n}\r\n","import {Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\r\n\r\nimport { Trial } from '../trial';\r\nimport { TrialMessage } from '../trial-message';\r\nimport { TrialService } from '../trial.service';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { CreateTrialComponent } from '../create-trial/create-trial.component';\r\nimport { UpdateTrialComponent } from '../update-trial/update-trial.component';\r\nimport { DeleteTrialComponent } from '../delete-trial/delete-trial.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoggingService } from '../../logging/logging.service';\r\nimport { Experiment } from '../../experiment/experiment';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ProgressSpinnerComponent } from '../../progress-spinner/progress-spinner.component';\r\nimport { ExperimentMessage } from '../../experiment/experiment-message';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { IMqttMessage, MqttService } from 'ngx-mqtt';\r\n\r\n@Component({\r\n  selector: 'app-trials',\r\n  templateUrl: './trials.component.html',\r\n  styleUrls: ['./trials.component.scss']\r\n})\r\nexport class TrialsComponent implements OnInit, OnDestroy {\r\n  trials: Trial[];\r\n  displayedColumns: string[];\r\n  dataSource = new MatTableDataSource(this.trials);\r\n  overlayRef: OverlayRef;\r\n  private trialCreatedSubscription: Subscription;\r\n\r\n  currentScreenWidth = '';\r\n  flexMediaWatcher: Subscription;\r\n\r\n  @ViewChild(MatTable) table: MatTable<Trial>;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(\r\n    private trialService: TrialService,\r\n    private mediaObserver: MediaObserver,\r\n    public createDialog: MatDialog,\r\n    public updateDialog: MatDialog,\r\n    public deleteDialog: MatDialog,\r\n    private loggingService: LoggingService,\r\n    private overlay: Overlay,\r\n    private mqttService: MqttService\r\n  ) {\r\n\r\n    this.trialCreatedSubscription = this.mqttService.observe('metadata/trial/created').subscribe((message: IMqttMessage) => {\r\n      const json = new TextDecoder('utf-8').decode(message.payload);\r\n      // let trial = <Trial>JSON.parse(json);\r\n      this.log('Trial created: ' + json);\r\n      this.read();\r\n    });\r\n\r\n    // this.flexMediaWatcher = mediaObserver.media$.subscribe((change: MediaChange) => {\r\n    //   if (change.mqAlias !== this.currentScreenWidth) {\r\n    //     this.currentScreenWidth = change.mqAlias;\r\n    //     this.setupTable();\r\n    //   }\r\n    // });\r\n\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy: this.overlay.position().global().centerHorizontally().centerVertically(),\r\n      hasBackdrop: true\r\n    });\r\n\r\n    this.flexMediaWatcher = mediaObserver.asObservable()\r\n      .pipe(\r\n        filter((changes: MediaChange[]) => changes.length > 0),\r\n        map((changes: MediaChange[]) => changes[0])\r\n      ).subscribe((change: MediaChange) => {\r\n        if (change.mqAlias !== this.currentScreenWidth) {\r\n          this.currentScreenWidth = change.mqAlias;\r\n          this.setupTable();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.read();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.flexMediaWatcher.unsubscribe();\r\n    this.trialCreatedSubscription.unsubscribe();\r\n  }\r\n\r\n  setupTable() {\r\n    this.displayedColumns = ['id', 'trial_id', 'name', 'date', 'experimenter', 'subjects', 'trial_number', 'group_number', 'study_number', 'condition', 'notes', 'testbed_version', 'experiment_id_experiments', 'actions'];\r\n    if (this.currentScreenWidth === 'xs') {\r\n      this.displayedColumns = ['name', 'experiment_id_experiments', 'actions'];\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  showOverlay() {\r\n    this.overlayRef.attach(new ComponentPortal(ProgressSpinnerComponent));\r\n    setTimeout(() => {\r\n      this.overlayRef.detach();\r\n      this.read();\r\n    }, 3000);\r\n  }\r\n\r\n  create(trial: Trial): void {\r\n    if (!trial) { return; }\r\n    this.trialService.createTrial(trial)\r\n      .subscribe(t => {\r\n        if (t) {\r\n          this.log(`Trial has been created: ${t.id}`);\r\n          this.trials.push(t);\r\n\r\n          this.dataSource.data = this.trials;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  createMessage(trial: TrialMessage): void {\r\n    if (!trial) { return; }\r\n    this.trialService.createTrialMessage(trial)\r\n      .subscribe(_ => {\r\n        // this.log(`Trial message has been created using message bus.`);\r\n        // this.showOverlay();\r\n      });\r\n    // this.table.renderRows();\r\n  }\r\n\r\n  read(): void {\r\n    this.trialService.readTrials()\r\n      .subscribe(trials => {\r\n        this.trials = trials;\r\n        this.dataSource = new MatTableDataSource(this.trials);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n      });\r\n  }\r\n\r\n  update(index: number, trial: Trial): void {\r\n    if (!trial) { return; }\r\n    if (!trial.id) { return; }\r\n    this.trialService.updateTrial(trial)\r\n      .subscribe(t => {\r\n        if (t) {\r\n          this.log(`Trial has been updated: ${t.id}`);\r\n          this.trials[index] = t;\r\n\r\n          this.dataSource.data = this.trials;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  delete(index: number,  trial: Trial): void {\r\n    if (!trial) { return; }\r\n    this.trialService.deleteTrial(trial.id)\r\n      .subscribe(success => {\r\n        if (success) {\r\n          this.log(`Trial has been deleted: ${trial.id}`);\r\n          this.dataSource.data.splice(index, 1);\r\n\r\n          this.dataSource.data = this.trials;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }\r\n      });\r\n    this.table.renderRows();\r\n  }\r\n\r\n  openCreateTrialDialog(): void {\r\n    // const dialogRef = this.createDialog.open(CreateTrialComponent, {\r\n    //   // width: '250px',\r\n    //   // data: {name: this.name, animal: this.animal}\r\n    // });\r\n    //\r\n    // dialogRef.afterClosed().subscribe(result => {\r\n    //   this.create(result);\r\n    // });\r\n    const dialogRef = this.createDialog.open(CreateTrialComponent, {\r\n      // width: '250px',\r\n      // data: {name: this.name, animal: this.animal}\r\n      panelClass: 'full-width-1-dialog'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result.useMessageBus) {\r\n        const trialMessage = this.trialService.generateTrialMessage(result, 'create', 'metadata-web', environment.testbedVersion, null, null, null);\r\n        this.createMessage(trialMessage);\r\n      } else {\r\n        const trial = {\r\n          id: -1,\r\n          trial_id: result.trial_id,\r\n          name: result.name,\r\n          date: result.date,\r\n          experimenter: result.experimenter,\r\n          subjects: result.subjects,\r\n          trial_number: result.trial_number,\r\n          group_number: result.group_number,\r\n          study_number: result.study_number,\r\n          condition: result.condition,\r\n          notes: result.notes,\r\n          testbed_version: result.testbed_version,\r\n          experiment: result.experiment\r\n        };\r\n        this.create(trial);\r\n      }\r\n    });\r\n  }\r\n\r\n  openUpdateTrialDialog(index: number, id: number, trial_id: string, name: string, date: string, experimenter: string, subjects: string[], trial_number: string, group_number: string, study_number: string, condition: string, notes: string[], testbed_version: string, experiment: Experiment) {\r\n    const dialogRef = this.updateDialog.open(UpdateTrialComponent, {\r\n      data: {\r\n        id,\r\n        trial_id,\r\n        name,\r\n        date,\r\n        experimenter,\r\n        subjects,\r\n        trial_number,\r\n        group_number,\r\n        study_number,\r\n        condition,\r\n        notes,\r\n        testbed_version,\r\n        experiment\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) { return; }\r\n      this.update(index, result);\r\n    });\r\n  }\r\n\r\n  openDeleteTrialDialog(index: number, id: number, trial_id: string, name: string, date: string, experimenter: string, subjects: string[], trial_number: string, group_number: string, study_number: string, condition: string, notes: string[], testbed_version: string, experiment: Experiment) {\r\n    const dialogRef = this.deleteDialog.open(DeleteTrialComponent, {\r\n      data: {\r\n        id,\r\n        trial_id,\r\n        name,\r\n        date,\r\n        experimenter,\r\n        trial_number,\r\n        group_number,\r\n        study_number,\r\n        condition,\r\n        subjects,\r\n        notes,\r\n        testbed_version,\r\n        experiment }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.delete(index, result);\r\n    });\r\n  }\r\n\r\n  private log(message: string) {\r\n    this.loggingService.add(`TrialComponent: ${message}`);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <h2>Trials</h2>\r\n\r\n  <div fxLayout=\"column\">\r\n\r\n    <mat-form-field>\r\n      <mat-label>Filter Table</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" autocomplete=\"off\">\r\n    </mat-form-field>\r\n\r\n    <div class=\"table-container\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n\r\n        <!-- ID Column -->\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Trial ID Column -->\r\n        <ng-container matColumnDef=\"trial_id\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Trial ID </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.trial_id}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.name}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Date Column -->\r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.date}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Experimenter Column -->\r\n        <ng-container matColumnDef=\"experimenter\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Experimenter </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.experimenter}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Subjects Column -->\r\n        <ng-container matColumnDef=\"subjects\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Subjects </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.subjects}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Trial Number Column -->\r\n        <ng-container matColumnDef=\"trial_number\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Trial Number </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.trial_number}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Group Number Column -->\r\n        <ng-container matColumnDef=\"group_number\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Group Number </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.group_number}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Study Number Column -->\r\n        <ng-container matColumnDef=\"study_number\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Study Number </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.study_number}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Condition Column -->\r\n        <ng-container matColumnDef=\"condition\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Condition </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.condition}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Notes Column -->\r\n        <ng-container matColumnDef=\"notes\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Notes </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.notes}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Testbed Column -->\r\n        <ng-container matColumnDef=\"testbed_version\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Testbed Version </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.testbed_version}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Experiment ID -->\r\n        <ng-container matColumnDef=\"experiment_id_experiments\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Experiment ID </th>\r\n          <td mat-cell *matCellDef=\"let trial\"> {{trial.experiment !== null ? trial.experiment.experiment_id : 'NULL'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th mat-header-cell class=\"create-button\" *matHeaderCellDef>\r\n            <button mat-icon-button (click)=\"openCreateTrialDialog()\">\r\n              <mat-icon aria-label=\"Create\">add_circle</mat-icon>\r\n            </button>\r\n          </th>\r\n\r\n          <td mat-cell *matCellDef=\"let row; let i = index;\">\r\n            <div class=\"mat-cell-buttons\">\r\n              <button mat-icon-button color=\"accent\" (click)=\"openUpdateTrialDialog(this.paginator.pageIndex == 0 ?  i : i + this.paginator.pageIndex * this.paginator.pageSize, row.id, row.trial_id, row.name, row.date, row.experimenter, row.subjects, row.trial_number, row.group_number, row.study_number, row.condition, row.notes, row.testbed_version, row.experiment)\">\r\n                <mat-icon aria-label=\"Edit\">edit</mat-icon>\r\n              </button>\r\n\r\n              <button mat-icon-button color=\"accent\" (click)=\"openDeleteTrialDialog(this.paginator.pageIndex == 0 ?  i : i + this.paginator.pageIndex * this.paginator.pageSize, row.id, row.trial_id, row.name, row.date, row.experimenter, row.subjects, row.trial_number, row.group_number, row.study_number, row.condition, row.notes, row.testbed_version, row.experiment)\">\r\n                <mat-icon aria-label=\"Delete\">delete</mat-icon>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <div class=\"no-results\" [style.display]=\"dataSource.data.length == 0 ? '' : 'none'\">\r\n        No results\r\n      </div>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { Experiment } from '../../experiment/experiment';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ExperimentService } from '../../experiment/experiment.service';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Trial } from '../trial';\r\n\r\n@Component({\r\n  selector: 'app-update-trial',\r\n  templateUrl: './update-trial.component.html',\r\n  styleUrls: ['./update-trial.component.scss']\r\n})\r\nexport class UpdateTrialComponent implements OnInit {\r\n  experiments: Experiment[];\r\n  updateTrialForm = this.formBuilder.group({\r\n    id: ['', Validators.required],\r\n    trial_id: ['', Validators.required],\r\n    name: ['', Validators.required],\r\n    date: ['', Validators.required],\r\n    experimenter: ['', Validators.required],\r\n    subjects: ['', Validators.required],\r\n    trial_number: ['', Validators.required],\r\n    group_number: ['', Validators.required],\r\n    study_number: ['', Validators.required],\r\n    condition: ['', Validators.required],\r\n    notes: [''],\r\n    testbed_version: ['', Validators.required],\r\n    experiment: ['', Validators.required]\r\n  });\r\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<UpdateTrialComponent>,\r\n    private experimentService: ExperimentService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Trial) {\r\n  }\r\n\r\n  readExperiments(): void {\r\n    this.experimentService.readExperiments()\r\n      .subscribe(experiments => {\r\n        this.experiments = experiments;\r\n      });\r\n  }\r\n\r\n  onUpdateClick(): void {\r\n    const dialogResult = this.updateTrialForm.value;\r\n\r\n    const subjectsText = this.updateTrialForm.get('subjects').value;\r\n    if (subjectsText !== '') {\r\n      dialogResult.subjects = subjectsText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.subjects = [];\r\n    }\r\n\r\n    const notesText = this.updateTrialForm.get('notes').value;\r\n    if (notesText !== '') {\r\n      dialogResult.notes = notesText.split(/[\\r\\n]+/);\r\n    } else {\r\n      dialogResult.notes = [];\r\n    }\r\n\r\n    this.dialogRef.close(dialogResult);\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onGenerateUUIDClick(): void {\r\n    this.updateTrialForm.patchValue({\r\n      trial_id: uuidv4()\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.readExperiments();\r\n\r\n    this.updateTrialForm.setValue({\r\n      id: this.data.id,\r\n      trial_id: this.data.trial_id,\r\n      name: this.data.name,\r\n      date: this.data.date,\r\n      experimenter: this.data.experimenter,\r\n      subjects: this.data.subjects.length > 0 ? this.data.subjects.join('\\r\\n') : this.data.subjects,\r\n      trial_number: this.data.trial_number,\r\n      group_number: this.data.group_number,\r\n      study_number: this.data.study_number,\r\n      condition: this.data.condition,\r\n      notes: this.data.notes.length > 0 ? this.data.notes.join('\\r\\n') : this.data.notes,\r\n      testbed_version: this.data.testbed_version,\r\n      experiment: this.data.experiment\r\n    });\r\n  }\r\n\r\n  compareFnExperiments(e1: Experiment, e2: Experiment): boolean {\r\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Update</h1>\r\n<div mat-dialog-content [formGroup]=\"updateTrialForm\" layout=\"row\" layout-align=\"center center\">\r\n  <fieldset>\r\n    <legend>Trial: {{data.id}}</legend>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial UUID</mat-label>\r\n      <input matInput formControlName=\"trial_id\" placeholder=\"UUID\" [pattern]=\"uuidPattern\" required autocomplete=\"off\" >\r\n      <mat-error>Please use a valid UUID.</mat-error>\r\n      <button mat-icon-button matSuffix (click)=\"onGenerateUUIDClick()\">\r\n        <mat-icon aria-label=\"UUID\">autorenew</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Name</mat-label>\r\n      <input matInput formControlName=\"name\" placeholder=\"Name\" required autocomplete=\"off\">\r\n      <mat-error>Name is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Date</mat-label>\r\n      <input matInput [matDatepicker]=\"date\" formControlName=\"date\" required autocomplete=\"off\">\r\n      <mat-error>Date is required.</mat-error>\r\n      <mat-datepicker-toggle matSuffix [for]=\"date\"></mat-datepicker-toggle>\r\n      <mat-datepicker #date></mat-datepicker>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experimenter</mat-label>\r\n      <input matInput formControlName=\"experimenter\" placeholder=\"Experimenter\" required autocomplete=\"off\">\r\n      <mat-error>Experimenter is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Subjects</mat-label>\r\n      <textarea matInput formControlName=\"subjects\" placeholder=\"Subjects...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Number</mat-label>\r\n      <input matInput formControlName=\"trial_number\" placeholder=\"Trial Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Group Number</mat-label>\r\n      <input matInput formControlName=\"group_number\" placeholder=\"Trial Group Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Group Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Study Number</mat-label>\r\n      <input matInput formControlName=\"study_number\" placeholder=\"Trial Study Number\" required autocomplete=\"off\">\r\n      <mat-error>Trial Study Number is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Condition</mat-label>\r\n      <input matInput formControlName=\"condition\" placeholder=\"Trial Condition\" required autocomplete=\"off\">\r\n      <mat-error>Trial Condition is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Notes</mat-label>\r\n      <textarea matInput formControlName=\"notes\" placeholder=\"Notes...\" autocomplete=\"off\"></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Testbed Version</mat-label>\r\n      <input matInput formControlName=\"testbed_version\" placeholder=\"Testbed Version\" required autocomplete=\"off\">\r\n      <mat-error>Testbed version is required.</mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Trial Experiment</mat-label>\r\n      <mat-select [compareWith]=\"compareFnExperiments\" formControlName=\"experiment\" placeholder=\"Experiment\" required>\r\n        <mat-option *ngFor=\"let experiment of experiments\" [value]=\"experiment\">\r\n          {{experiment.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n      <mat-error>Experiment is required.</mat-error>\r\n    </mat-form-field>\r\n  </fieldset>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"accent\" (click)=\"onCancelClick()\">Cancel</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onUpdateClick()\" [disabled]=\"!updateTrialForm.valid\">Update</button>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}