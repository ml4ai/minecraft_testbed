{"version":3,"sources":["./src/app/stats/first-look/first-look.component.ts","./src/app/stats/first-look/first-look.component.html","./src/app/stats/stats-routing.module.ts","./src/app/stats/stats.module.ts","./src/app/stats/stats/stats.component.ts","./src/app/stats/stats/stats.component.html"],"names":[],"mappings":"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","file":"stats-stats-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { forkJoin, Observable, Subscription} from 'rxjs';\nimport { Replay } from '../../replay/replay';\nimport { Trial } from '../../trial/trial';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ElasticsearchService } from '../../dashboard/elasticsearch';\nimport { LoggingService } from '../../logging/logging.service';\nimport { TrialService } from '../../trial/trial.service';\nimport { ReplayService } from '../../replay/replay.service';\nimport { HealthStatusService } from '../../dashboard/health-status/health-status.service';\nimport { MqttService } from 'ngx-mqtt';\nimport { map, startWith } from 'rxjs/operators';\nimport firstLookDataJson from './first-look-data.json';\nimport { FirstLook } from './first-look';\nimport { FirstLookReport } from './first-look-report';\n\n@Component({\n  selector: 'app-first-look',\n  templateUrl: './first-look.component.html',\n  styleUrls: ['./first-look.component.scss']\n})\nexport class FirstLookComponent implements OnInit, OnDestroy {\n  private indexSubscription: Subscription;\n\n  private isReplayCreatedSubscription: Subscription;\n  public isFirstLookRunning = false;\n\n  private trialCreatedSubscription: Subscription;\n  private replayCreatedSubscription: Subscription;\n\n  private metadataAppOnlineSubscription: Subscription;\n  public metadataAppOnline = false;\n\n  public areResultsReady = false;\n\n  public firstLookReport: FirstLookReport = null;\n\n  replays: Replay[] = [];\n  trials: Trial[] = [];\n  parents: Trial[] | Replay[] = [];\n  firstLookTypes: string[] = ['TRIAL', 'REPLAY'];\n  filteredFirstLooks: Observable<Trial[] | Replay[]>;\n\n  indices: any[] = [];\n  filteredIndices: Observable<any[]>;\n\n  // replayProgress = '';\n\n  firstLookData: FirstLook[] = [];\n  firstLookTests: any[] = [];\n\n  firstLookIdControl = this.formBuilder.control({value: '', disabled: false}, Validators.required);\n  firstLookTypeControl = this.formBuilder.control({value: '', disabled: false}, Validators.required);\n  overrideFirstLookIdToggleControl = this.formBuilder.control(false);\n  firstLookIdEnteredControl = this.formBuilder.control({value: '', disabled: true}, Validators.required);\n\n  indexNameControl = this.formBuilder.control({ value: '', disabled: false }, Validators.required);\n  overrideIndexNameToggleControl = this.formBuilder.control(false);\n  indexNameEnteredControl = this.formBuilder.control({value: '', disabled: true });\n\n  runFirstLookForm = this.formBuilder.group({\n    firstLookId: this.firstLookIdControl,\n    firstLookType: this.firstLookTypeControl,\n    overrideFirstLookIdToggle: this.overrideFirstLookIdToggleControl,\n    firstLookIdEntered: this.firstLookIdEnteredControl,\n    indexName: this.indexNameControl,\n    overrideIndexNameToggle: this.overrideIndexNameToggleControl,\n    indexNameEntered: this.indexNameEnteredControl,\n  });\n\n  uuidPattern: RegExp = new RegExp(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\n  indexPattern: RegExp = new RegExp(/(?=[a-z0-9_\\-])(?!.*[\\s,:\"*+\\/\\\\|?#><]+)(?!_|-)/);\n  // firstLookId: string;\n  // firstLookIndexName: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public elasticsearch: ElasticsearchService,\n    private loggingService: LoggingService,\n    private trialService: TrialService,\n    private replayService: ReplayService,\n    private healthStatusService: HealthStatusService,\n    private mqttService: MqttService,\n  ) { }\n\n  ngOnInit(): void {\n    this.firstLookData = firstLookDataJson as FirstLook[];\n    // this.firstLookId = '';\n    // this.firstLookIndexName = '';\n    this.firstLookTests = [];\n    this.isReplayCreatedSubscription = this.replayService.isReplayCreated.subscribe(isReplayCreated => {\n      this.isFirstLookRunning = isReplayCreated;\n    });\n    this.overrideFirstLookIdToggleControl.valueChanges.subscribe((checked) => {\n      if (checked) {\n        this.firstLookIdControl.reset();\n        this.firstLookIdControl.disable();\n        // this.replayParentTypeControl.disable();\n        // this.replayParentTypeControl.reset();\n        this.firstLookIdEnteredControl.enable();\n      } else {\n        this.firstLookIdControl.enable();\n        this.firstLookIdControl.reset();\n        // this.replayParentTypeControl.enable();\n        // this.replayParentTypeControl.reset();\n        this.firstLookIdEnteredControl.reset();\n        this.firstLookIdEnteredControl.disable();\n      }\n    });\n    this.overrideIndexNameToggleControl.valueChanges.subscribe((checked) => {\n      if (checked) {\n        this.indexNameControl.reset();\n        this.indexNameControl.disable();\n        this.indexNameEnteredControl.enable();\n        // this.clearReplayControls();\n      } else {\n        this.indexNameControl.enable();\n        this.indexNameEnteredControl.reset();\n        this.indexNameEnteredControl.disable();\n        // this.clearReplayControls();\n      }\n    });\n    forkJoin(\n      {\n        trials: this.trialService.readTrials(),\n        replays: this.replayService.readReplays()\n      }).subscribe(({trials, replays}) => {\n      this.trials = trials;\n      this.replays = replays;\n      this.filteredFirstLooks = this.firstLookIdControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(parent => this._filterParentStates(parent))\n        );\n    });\n    this.trialCreatedSubscription = this.mqttService.observe('metadata/trial/created').subscribe(() => {\n      this.readParents();\n    });\n    this.replayCreatedSubscription = this.mqttService.observe('metadata/replay/created').subscribe(() => {\n      this.readParents();\n    });\n    this.metadataAppOnlineSubscription = this.healthStatusService.isMetadataAppOnline.subscribe(isOnline => {\n      if (this.metadataAppOnline !== isOnline) {\n        this.readParents();\n      }\n      this.metadataAppOnline = isOnline;\n    });\n    this.indexSubscription = this.elasticsearch.indices.subscribe(indices => {\n      const selected = this.indexNameControl.value;\n      this.indices = indices;\n      this.filteredIndices = this.indexNameControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(index => index ? this._filterIndexStates(index) : this.indices.slice())\n        );\n      this.indexNameControl.setValue(selected);\n    });\n  }\n\n  readParents(): void {\n    forkJoin(\n      {\n        trials: this.trialService.readTrials(),\n        replays: this.replayService.readReplays()\n      }).subscribe(({trials, replays}) => {\n      this.trials = trials;\n      this.replays = replays;\n      const selected = this.firstLookIdControl.value;\n      this.firstLookIdControl.setValue(selected);\n      this.filteredFirstLooks = this.firstLookIdControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(parent => this._filterParentStates(parent))\n        );\n    });\n  }\n\n  firstLookTypeChanged(event) {\n    switch (event.value) {\n      case 'TRIAL':\n        this.parents = this.trials;\n        break;\n      case 'REPLAY':\n        this.parents = this.replays;\n        break;\n      default:\n        this.parents = [];\n        break;\n    }\n    // const selected = this.replayParentIdControl.value;\n    this.firstLookIdControl.setValue('');\n  }\n\n  ngOnDestroy(): void {\n    this.indexSubscription.unsubscribe();\n    this.isReplayCreatedSubscription.unsubscribe();\n    this.metadataAppOnlineSubscription.unsubscribe();\n    this.trialCreatedSubscription.unsubscribe();\n    this.replayCreatedSubscription.unsubscribe();\n  }\n\n  displayFirstLookIdFn(parent: Trial | Replay): string {\n    if (!parent) {\n      return '';\n    }\n    if ((parent as Trial).name) {\n      const t = parent as Trial;\n      return t.name;\n    } else {\n      const r = parent as Replay;\n      return r.replay_id;\n    }\n  }\n\n  getDisplayName(parent: Trial | Replay): string {\n    if ((parent as Trial).name) {\n      const t = parent as Trial;\n      return t.name;\n    } else {\n      const r = parent as Replay;\n      return r.replay_id;\n    }\n  }\n\n  updateIndexSelection(event): void {\n    // this.clearReplayControls();\n    const index = event.option.value;\n    this.indexNameEnteredControl.enable();\n    this.runFirstLookForm.patchValue({\n      indexNameEnteredControl: index\n    });\n    this.indexNameEnteredControl.disable();\n  }\n\n  displayIndexNameFn(index: any): string {\n    return index && index.index ? index.index : '';\n  }\n\n  onClearClick() {\n    this.runFirstLookForm.reset();\n    this.firstLookIdControl.enable();\n    this.firstLookIdEnteredControl.disable();\n    this.indexNameControl.enable();\n    this.indexNameEnteredControl.disable();\n    this.parents = [];\n    // this.firstLookId = '';\n    this.firstLookData = [];\n    this.firstLookTests = [];\n    this.isFirstLookRunning = false;\n    this.areResultsReady = false;\n    this.firstLookReport = null;\n  }\n\n  onRunClick(): void {\n    this.isFirstLookRunning = true;\n    const parent = this.firstLookIdControl.value;\n    const firstLookType = this.firstLookTypeControl.value;\n    let firstLookId = '';\n    let firstLookIndexName = '';\n    if (!this.overrideFirstLookIdToggleControl.value) {\n      firstLookId = this.firstLookIdControl.value['msg.replay_id'];\n      if (firstLookType === 'TRIAL') {\n        const t = parent as Trial;\n        firstLookId = t.trial_id;\n      } else if (firstLookType === 'REPLAY') {\n        const r = parent as Replay;\n        firstLookId = r.replay_id;\n      }\n    } else {\n      firstLookId = this.firstLookIdEnteredControl.value;\n    }\n\n    if (!this.overrideIndexNameToggleControl.value) {\n      firstLookIndexName = this.indexNameControl.value.index;\n    } else {\n      firstLookIndexName = this.indexNameEnteredControl.value;\n    }\n\n    // filename = `TrialMessages_CondBtwn-${this.trialIdControl.value.condition}_CondWin-${this.trialIdControl.value.experiment.mission}-StaticMap_Trial-${this.trialIdControl.value.trial_number}_Team-na_Member-${this.trialIdControl.value.subjects.join('-')}_Vers-${this.trialIdControl.value.testbed_version}`;\n    this.firstLookReport = {id: '', index: '', is_replay: false, results: [], total_documents: 0, trial: undefined};\n    if (firstLookType === 'REPLAY') {\n      this.replayService.getReplayRootTrial(firstLookId).subscribe(trial => {\n        this.firstLookReport.trial = trial;\n        this.firstLookReport.is_replay = true;\n        this.firstLookReport.id = firstLookId;\n        this.firstLookReport.index = firstLookIndexName;\n        this.elasticsearch.getDocumentCount(firstLookIndexName, firstLookType, firstLookId).then(documentCountResult => {\n          this.firstLookReport.total_documents = documentCountResult.count;\n          const tests = this.firstLookData.map((element, index) => {\n            return this.elasticsearch.getMessageCount(firstLookIndexName, firstLookType, firstLookId, element.message_type, element.sub_type).then(messageCountResult => {\n              this.firstLookTests[index] = {\n                valid: this.isFirstLookItemValid(element, messageCountResult.count)\n              };\n              this.firstLookReport.results.push({\n                message_type: element.message_type,\n                sub_type: element.sub_type,\n                comparison: element.comparison,\n                result: this.firstLookTests[index].valid,\n                count: messageCountResult.count\n              });\n            });\n          });\n          Promise.all(tests).then(() => {\n            console.log(JSON.stringify(this.firstLookReport));\n            this.isFirstLookRunning = false;\n            this.areResultsReady = true;\n          });\n        });\n      });\n    } else if (firstLookType === 'TRIAL') {\n      this.trialService.readTrialUUID(firstLookId).subscribe(trial => {\n        this.firstLookReport.trial = trial;\n        this.firstLookReport.is_replay = false;\n        this.firstLookReport.id = firstLookId;\n        this.firstLookReport.index = firstLookIndexName;\n        this.elasticsearch.getDocumentCount(firstLookIndexName, firstLookType, firstLookId).then(documentCountResult => {\n          this.firstLookReport.total_documents = documentCountResult.count;\n          const tests = this.firstLookData.map((element, index) => {\n            return this.elasticsearch.getMessageCount(firstLookIndexName, firstLookType, firstLookId, element.message_type, element.sub_type).then(messageCountResult => {\n              this.firstLookTests[index] = {\n                valid: this.isFirstLookItemValid(element, messageCountResult.count)\n              };\n              this.firstLookReport.results.push({\n                message_type: element.message_type,\n                sub_type: element.sub_type,\n                comparison: element.comparison,\n                result: this.firstLookTests[index].valid,\n                count: messageCountResult.count\n              });\n            });\n          });\n          Promise.all(tests).then(() => {\n            console.log(JSON.stringify(this.firstLookReport));\n            this.isFirstLookRunning = false;\n            this.areResultsReady = true;\n          });\n        });\n      });\n    }\n  }\n\n  generateReport() {\n    if (this.areResultsReady) {\n      const dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(this.firstLookReport));\n      const downloadLink = document.createElement('a');\n      downloadLink.setAttribute('href', dataString);\n      downloadLink.setAttribute('download', 'firstlook.json');\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      downloadLink.remove();\n    }\n\n    // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\n    // var downloadAnchorNode = document.createElement('a');\n    // downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    // downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n    // document.body.appendChild(downloadAnchorNode); // required for firefox\n    // downloadAnchorNode.click();\n    // downloadAnchorNode.remove();\n  }\n\n  private isFirstLookItemValid(firstLook: FirstLook, count: number): boolean {\n    switch (firstLook.comparison.operator) {\n      case '>=':\n        return firstLook.comparison.value >= count;\n      case '==':\n        return firstLook.comparison.value === count;\n      default:\n        return false;\n    }\n  }\n\n  private _filterParentStates(value: any): any[] {\n    const filteredList: any[] = [];\n    if (value === null) {\n      return filteredList;\n    }\n    let filterValue = '';\n    if (value.name) {\n      filterValue = value.name.toLowerCase();\n    } else if (value.replay_id) {\n      filterValue = value.replay_id.toLowerCase();\n    } else {\n      filterValue = value.toLowerCase();\n    }\n    this.parents.forEach(parent => {\n      if ((parent as Trial).name) {\n        const t = parent as Trial;\n        if (t.name.toString().toLowerCase().includes(filterValue)) {\n          filteredList.push(t);\n        }\n      } else {\n        const r = parent as Replay;\n        if (r.replay_id.toString().toLowerCase().includes(filterValue)) {\n          filteredList.push(r);\n        }\n      }\n    });\n    return filteredList;\n    // return this.parents.filter(parent => replay['msg.replay_id'].toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _filterIndexStates(value: any): any[] {\n    if (value.index) {\n      const filterValue = value.index.toLowerCase();\n      return this.indices.filter(option => option.index.toString().toLowerCase().includes(filterValue));\n    } else {\n      const filterValue = value.toLowerCase();\n      return this.indices.filter(option => option.index.toString().toLowerCase().includes(filterValue));\n    }\n  }\n\n  private log(message: string) {\n    this.loggingService.add(`RunReplayComponent: ${message}`);\n  }\n}\n","<mat-tab-group >\n  <mat-tab label=\"Selection\">\n    <form [formGroup]=\"runFirstLookForm\" class=\"example-form\">\n\n      <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">\n        <legend>UUID</legend>\n        <div fxLayout=\"column\">\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-label>First Look Type</mat-label>\n            <mat-radio-group formControlName=\"firstLookType\" color=\"primary\" (change)=\"firstLookTypeChanged($event)\">\n              <mat-radio-button *ngFor=\"let firstLookType of firstLookTypes\" [value]=\"firstLookType\">\n                {{firstLookType}}\n              </mat-radio-button>\n            </mat-radio-group>\n            <textarea matInput hidden></textarea>\n            <mat-error>First Look Type is required.</mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"mat-form-field-cursor\">\n            <mat-label>Select First Look</mat-label>\n            <input matInput placeholder=\"UUID\" aria-label=\"UUID\" [matAutocomplete]=\"autoFirstLook\" formControlName=\"firstLookId\" required autocomplete=\"off\">\n            <mat-autocomplete #autoFirstLook=\"matAutocomplete\" [displayWith]=\"displayFirstLookIdFn\">\n              <mat-option *ngFor=\"let firstLook of filteredFirstLooks | async\" [value]=\"firstLook\">\n                {{getDisplayName(firstLook)}}\n              </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"firstLookIdControl.setValue('')\" [disabled]=\"firstLookIdControl.disabled\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-slide-toggle color=\"primary\" formControlName=\"overrideFirstLookIdToggle\">\n              Manual UUID Entry\n            </mat-slide-toggle>\n            <textarea matInput hidden></textarea>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>Enter UUID</mat-label>\n            <input matInput placeholder=\"UUID\" aria-label=\"UUID\" formControlName=\"firstLookIdEntered\" [pattern]=\"uuidPattern\" required autocomplete=\"off\">\n            <mat-error>Invalid UUID.</mat-error>\n          </mat-form-field>\n        </div>\n      </fieldset>\n      <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">\n        <legend>elasticsearch Source Index</legend>\n        <div fxLayout=\"column\">\n          <mat-form-field class=\"mat-form-field-cursor\">\n            <mat-label>Select Index</mat-label>\n            <input matInput placeholder=\"Index\" aria-label=\"Index\" [matAutocomplete]=\"autoIndex\" formControlName=\"indexName\" required autocomplete=\"off\">\n            <mat-autocomplete #autoIndex=\"matAutocomplete\" (optionSelected)=\"updateIndexSelection($event)\" [displayWith]=\"displayIndexNameFn\">\n              <mat-option *ngFor=\"let index of filteredIndices | async\" [value]=\"index\">\n                <span>{{index.index}}</span>\n                <br>\n                <small class=\"accent-color\">Count: {{index['docs.count']}}</small>\n              </mat-option>\n            </mat-autocomplete>\n            <button type=\"button\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"indexNameControl.setValue('')\" [disabled]=\"indexNameControl.disabled\">\n              <mat-icon>close</mat-icon>\n            </button>\n          </mat-form-field>\n\n          <mat-form-field floatLabel=\"always\" appearance=\"none\">\n            <mat-slide-toggle color=\"primary\" formControlName=\"overrideIndexNameToggle\">\n              Manual Index Entry\n            </mat-slide-toggle>\n            <textarea matInput hidden></textarea>\n          </mat-form-field>\n\n          <mat-form-field>\n            <mat-label>Enter Index</mat-label>\n            <input matInput placeholder=\"Index\" aria-label=\"Index\" formControlName=\"indexNameEntered\" [pattern]=\"indexPattern\" required autocomplete=\"off\">\n            <mat-error>Invalid index name.</mat-error>\n          </mat-form-field>\n        </div>\n      </fieldset>\n      <!--  <fieldset [ngClass]=\"{'accent-color' : isFirstLookRunning}\" [disabled]=\"isFirstLookRunning\">-->\n      <!--    <legend>Tests</legend>-->\n\n      <!--  </fieldset>-->\n    </form>\n    <br>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-spinner *ngIf=\"isFirstLookRunning\" mode=\"indeterminate\" diameter=\"36\"></mat-spinner>\n        <button mat-raised-button color=\"primary\" (click)=\"onRunClick()\" [disabled]=\"!runFirstLookForm.valid\">Run</button>\n        <button mat-raised-button color=\"primary\" (click)=\"onClearClick()\" [disabled]=\"!areResultsReady\">Clear</button>\n      </div>\n    </div>\n  </mat-tab>\n  <mat-tab label=\"Results\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <mat-card ngClass=\"stats-card\" [ngClass.lt-md]=\"'stats-card-narrow'\">\n        <mat-card-header>\n          <mat-card-title>{{areResultsReady ? firstLookReport.trial.name : ''}}</mat-card-title>\n          <mat-card-subtitle>{{areResultsReady ? firstLookReport.id: ''}} {{areResultsReady ? firstLookReport.is_replay ? '[REPLAY]' : '' : ''}}</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <div fxLayout=\"column\">\n            <mat-selection-list #firstLookList [multiple]=\"false\">\n              <mat-list-option *ngFor=\"let item of firstLookData; let i = index\">\n                <mat-icon *ngIf=\"firstLookTests[i] !== undefined\" mat-list-icon color=\"{{firstLookTests[i].valid === true ? 'primary' : 'warn'}}\" matTooltip=\"{{firstLookTests[i] !== undefined && firstLookTests[i].valid === true ? 'Passed' : 'Failed'}}\">lens</mat-icon>\n                <div mat-line>[{{item.message_type}}] {{item.sub_type}} {{item.comparison.operator}} {{item.comparison.value}}</div>\n              </mat-list-option>\n            </mat-selection-list>\n          </div>\n        </mat-card-content>\n        <mat-divider inset></mat-divider>\n        <mat-card-actions align=\"end\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Download container log.\" (click)=\"generateReport()\" [disabled]=\"!areResultsReady\" matTooltip=\"Generate report.\">\n            <mat-icon>download</mat-icon>\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StatsComponent } from './stats/stats.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StatsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StatsRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatsComponent } from './stats/stats.component';\nimport { StatsRoutingModule } from '../stats/stats-routing.module';\nimport { AngularMaterialModule } from '../angular-material/angular-material-module';\nimport { FirstLookComponent } from './first-look/first-look.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [StatsComponent, FirstLookComponent],\n  imports: [\n    CommonModule,\n    StatsRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class StatsModule { }\n","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\nimport { ElasticsearchService } from '../../dashboard/elasticsearch';\nimport { HealthStatusService } from '../../dashboard/health-status/health-status.service';\nimport {MetadataAppService} from \"../../dashboard/metadata-app/metadata-app.service\";\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.scss']\n})\nexport class StatsComponent implements OnInit, OnDestroy {\n  private metadataAppOnlineSubscription: Subscription;\n  public metadataAppOnline = false;\n\n  private elasticsearchBusySubscription: Subscription;\n  public elasticsearchBusy = false;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.elasticsearchBusy) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private metadataAppService: MetadataAppService,\n    private elasticsearch: ElasticsearchService,\n    private healthStatusService: HealthStatusService\n  ) { }\n\n  ngOnInit(): void {\n    this.healthTimer();\n    // this.elasticsearchOnlineSubscription = this.healthStatusService.isElasticsearchOnline.subscribe(isOnline => this.elasticsearchOnline = isOnline);\n    this.metadataAppOnlineSubscription = this.healthStatusService.isMetadataAppOnline.subscribe(isOnline => this.metadataAppOnline = isOnline);\n    this.elasticsearchBusySubscription = this.elasticsearch.isElasticsearchBusy.subscribe(isBusy => this.elasticsearchBusy = isBusy);\n  }\n\n  ngOnDestroy(): void {\n    // this.elasticsearchOnlineSubscription.unsubscribe();\n    this.metadataAppOnlineSubscription.unsubscribe();\n    this.elasticsearchBusySubscription.unsubscribe();\n  }\n\n  healthTimer(): void {\n    const source = timer(0, 10000);\n    source.subscribe(val => {\n      this.updateHealth();\n    });\n  }\n\n  updateHealth(): void {\n    this.metadataAppService.getHealth()\n      .subscribe(result => {\n        if (!result) {\n          this.healthStatusService.setMetadataAppOnline(false);\n          this.healthStatusService.setMetadataAppElasticsearchOnline(false);\n        }\n        else {\n          if (result.status === 'UP') {\n            this.healthStatusService.setMetadataAppOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppOnline(false);\n          }\n          if (result.details.elasticsearch.status === 'UP') {\n            this.healthStatusService.setMetadataAppElasticsearchOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppElasticsearchOnline(false);\n          }\n          if (result.details['mqtt-client'].status === 'UP') {\n            this.healthStatusService.setMetadataAppMqttClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppMqttClientOnline(false);\n          }\n          if (result.details['vertx-pg-client'].status === 'UP') {\n            this.healthStatusService.setMetadataAppPostgresClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppPostgresClientOnline(false);\n          }\n          if (result.details['compositeDiscoveryClient()'].status === 'UP') {\n            this.healthStatusService.setMetadataAppDiscoveryClientOnline(true);\n          } else {\n            this.healthStatusService.setMetadataAppDiscoveryClientOnline(false);\n          }\n          if (result.details.diskSpace.status === 'UP') {\n            this.healthStatusService.setMetadataAppDiskSpaceOnline(true);\n         } else {\n            this.healthStatusService.setMetadataAppDiskSpaceOnline(false);\n          }\n        }\n      });\n  }\n}\n","<div class=\"container\">\n  <h2>Stats</h2>\n  <div fxLayout=\"row wrap\" [fxLayout.lt-md]=\"'column wrap'\" fxLayoutAlign=\"center top\"> <!--fxLayoutGap=\"2em\"-->\n\n    <div [fxFlex.gt-sm]=\"100 / 2 + '%'\" fxLayoutAlign=\"stretch\">\n      <mat-card ngClass=\"dashboard-card\" [ngClass.lt-md]=\"'dashboard-card-narrow'\">\n        <mat-card-header>\n          <div mat-card-avatar>\n            <mat-icon aria-label=\"First Look\">done_all</mat-icon>\n          </div>\n          <mat-card-title>First Look</mat-card-title>\n          <mat-card-subtitle>Check Validity</mat-card-subtitle>\n          <mat-icon color=\"{{metadataAppOnline ? 'primary' : 'warn'}}\" matTooltip=\"{{metadataAppOnline ? 'All systems online' : '1 or more systems offline'}}\">lens</mat-icon>\n        </mat-card-header>\n        <mat-card-content>\n          <app-first-look></app-first-look>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n</div>\n\n"],"sourceRoot":"webpack:///"}